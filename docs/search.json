[{"path":"https://khliland.github.io/HDANOVA/articles/vignette_A_data.html","id":"read-from-file","dir":"Articles","previous_headings":"","what":"Read from file","title":"A. Data handling","text":"Data stored many different file formats. following three examples cover two types CSV-files generic flat files.","code":"# Find directory extdata from the multiblock package mbdir <- system.file('extdata/', package = \"multiblock\")  # Comma separated values, row names in first column meta_data <- read.csv(paste0(mbdir, \"/meta_data.csv\"), row.names = 1) # If working directory matches file location: # meta_data <- read.csv('meta_data.csv', row.names = 1) meta_data #>         temperature colour #> John           38.0   blue #> Julia          37.0  green #> James          37.5   blue #> Jacob          37.6    red #> Jane           37.2    red #> Johanna        37.9  green  # Semi-colon separated values (locales where the decimal point is comma), # no row names proteins <- read.csv2(paste0(mbdir, \"/proteins.csv\")) proteins #>         prot1       prot2      prot3 #> 1  0.46532048  0.30183300 -1.4654414 #> 2 -1.79802081 -0.22812232 -0.4639203 #> 3 -1.92962434 -0.40513080  0.1767796 #> 4  0.87437138  0.79843798  0.1234731 #> 5 -0.62445278 -0.07975479 -1.1126332 #> 6 -0.07493721  1.09576027  1.2656596  # Blank space separated data without labels genes <- read.table(paste0(mbdir, \"/genes.dat\")) genes #>            V1         V2         V3 #> 1  0.39033106 -0.5720390  1.9147573 #> 2  0.55352785  0.0948703 -0.2239755 #> 3  0.09872346 -0.1029385  0.9047138 #> 4 -0.59213740 -0.6027739  0.6177083 #> 5 -0.02350148  0.3572809 -0.5168416 #> 6  0.76644845  1.2863428  1.8239298"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_A_data.html","id":"data-pre-processing","dir":"Articles","previous_headings":"","what":"Data pre-processing","title":"A. Data handling","text":"analysis, various types pre-processing may needed. Centring standardising/scaling may considered basic. R, operations performed column-wise default, leading autoscaling. operations performed rows, perform standard normal variate (SNV) instead.","code":"# Column-centring genes_centred <- scale(genes, scale=FALSE) colMeans(genes_centred) # Check mean values #>           V1           V2           V3  #> 1.850372e-17 0.000000e+00 7.401487e-17  # Autoscaling genes_scaled <- scale(genes) apply(genes_scaled, 2, sd) # Check standard deviations #> V1 V2 V3  #>  1  1  1  # SNV (transpose, autoscale, re-transpose) genes_snv <- t(scale(t(genes))) apply(genes_snv, 1, sd) # Check standard deviations #> [1] 1 1 1 1 1 1"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_A_data.html","id":"re-coding-categorical-data","dir":"Articles","previous_headings":"Data pre-processing","what":"Re-coding categorical data","title":"A. Data handling","text":"analysis methods require continuous input data. meta_data data.frame contains character vector (factor older R versions) categories. package function dummycode converting categorical data various dummy formats.","code":"# Default is sum-coding dummycode(meta_data$colour) #>   x1 x2 #> 1  1  0 #> 2  0  1 #> 3  1  0 #> 4 -1 -1 #> 5 -1 -1 #> 6  0  1  # Treatment coding dummycode(meta_data$colour, \"contr.treatment\") #>   xgreen xred #> 1      0    0 #> 2      1    0 #> 3      0    0 #> 4      0    1 #> 5      0    1 #> 6      1    0  # Full dummy-coding (rank deficient) dummycode(meta_data$colour, drop = FALSE) #>   xblue xgreen xred #> 1     1      0    0 #> 2     0      1    0 #> 3     1      0    0 #> 4     0      0    1 #> 5     0      0    1 #> 6     0      1    0  # Replace categorical with dummy-coded, use I() to index by common name meta_data2 <- meta_data meta_data2$colour <- I(dummycode(meta_data$colour, drop = FALSE)) meta_data2 #>         temperature colour.xblue colour.xgreen colour.xred #> John           38.0            1             0           0 #> Julia          37.0            0             1           0 #> James          37.5            1             0           0 #> Jacob          37.6            0             0           1 #> Jane           37.2            0             0           1 #> Johanna        37.9            0             1           0 meta_data2$colour #>   xblue xgreen xred #> 1     1      0    0 #> 2     0      1    0 #> 3     1      0    0 #> 4     0      0    1 #> 5     0      0    1 #> 6     0      1    0"},{"path":[]},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_A_data.html","id":"create-list-of-blocks","dir":"Articles","previous_headings":"Data structures for analysis including blocks","what":"Create list of blocks","title":"A. Data handling","text":"simple list blocks can created using list() function. Naming blocks can done directly creation.","code":"# Direct approach blocks1 <- list(meta = meta_data2, proteins = proteins, genes = genes)  # Two-step approach blocks2 <- list(meta_data2, proteins, genes) names(blocks2) <- c('meta', 'proteins', 'genes')  # Same result identical(blocks1, blocks2) #> [1] TRUE  # Access by name or number blocks1[['meta']] #>         temperature colour.xblue colour.xgreen colour.xred #> John           38.0            1             0           0 #> Julia          37.0            0             1           0 #> James          37.5            1             0           0 #> Jacob          37.6            0             0           1 #> Jane           37.2            0             0           1 #> Johanna        37.9            0             1           0 blocks2[[1]] #>         temperature colour.xblue colour.xgreen colour.xred #> John           38.0            1             0           0 #> Julia          37.0            0             1           0 #> James          37.5            1             0           0 #> Jacob          37.6            0             0           1 #> Jane           37.2            0             0           1 #> Johanna        37.9            0             1           0"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_A_data.html","id":"create-data-frame-of-blocks","dir":"Articles","previous_headings":"Data structures for analysis including blocks","what":"Create data.frame of blocks","title":"A. Data handling","text":"data.frame convenient storage format data R can handle many types variables, e.g.Â numeric, logical, character, factor matrices. latter useful analyses data shared sample mode.","code":"# Construct block data.frame from list df1 <- block.data.frame(blocks1)  # Construct block data.frame from data.frame: # First merge blocks into data.frame my_data <- cbind(meta_data2, proteins, genes) # Then construct block data.frame using named  # list of indexes df2 <- block.data.frame(my_data, block_inds =          list(meta = 1:2, proteins = 3:5, genes = 6:8))  # Same result identical(df1,df2) #> [1] TRUE  # Access by name or number df1[[2]] #>               prot1       prot2      prot3 #> John     0.46532048  0.30183300 -1.4654414 #> Julia   -1.79802081 -0.22812232 -0.4639203 #> James   -1.92962434 -0.40513080  0.1767796 #> Jacob    0.87437138  0.79843798  0.1234731 #> Jane    -0.62445278 -0.07975479 -1.1126332 #> Johanna -0.07493721  1.09576027  1.2656596 df2[['proteins']] #>               prot1       prot2      prot3 #> John     0.46532048  0.30183300 -1.4654414 #> Julia   -1.79802081 -0.22812232 -0.4639203 #> James   -1.92962434 -0.40513080  0.1767796 #> Jacob    0.87437138  0.79843798  0.1234731 #> Jane    -0.62445278 -0.07975479 -1.1126332 #> Johanna -0.07493721  1.09576027  1.2656596 df1[c(1,3)] #>         meta.temperature meta.colour.xblue meta.colour.xgreen meta.colour.xred #> John                38.0               1.0                0.0              0.0 #> Julia               37.0               0.0                1.0              0.0 #> James               37.5               1.0                0.0              0.0 #> Jacob               37.6               0.0                0.0              1.0 #> Jane                37.2               0.0                0.0              1.0 #> Johanna             37.9               0.0                1.0              0.0 #>            genes.V1    genes.V2    genes.V3 #> John     0.39033106 -0.57203901  1.91475732 #> Julia    0.55352785  0.09487030 -0.22397553 #> James    0.09872346 -0.10293847  0.90471382 #> Jacob   -0.59213740 -0.60277392  0.61770832 #> Jane    -0.02350148  0.35728086 -0.51684156 #> Johanna  0.76644845  1.28634283  1.82392983 df1[-2] #>         meta.temperature meta.colour.xblue meta.colour.xgreen meta.colour.xred #> John                38.0               1.0                0.0              0.0 #> Julia               37.0               0.0                1.0              0.0 #> James               37.5               1.0                0.0              0.0 #> Jacob               37.6               0.0                0.0              1.0 #> Jane                37.2               0.0                0.0              1.0 #> Johanna             37.9               0.0                1.0              0.0 #>            genes.V1    genes.V2    genes.V3 #> John     0.39033106 -0.57203901  1.91475732 #> Julia    0.55352785  0.09487030 -0.22397553 #> James    0.09872346 -0.10293847  0.90471382 #> Jacob   -0.59213740 -0.60277392  0.61770832 #> Jane    -0.02350148  0.35728086 -0.51684156 #> Johanna  0.76644845  1.28634283  1.82392983 df2[c('proteins','genes')] #>         proteins.prot1 proteins.prot2 proteins.prot3    genes.V1    genes.V2 #> John        0.46532048     0.30183300    -1.46544136  0.39033106 -0.57203901 #> Julia      -1.79802081    -0.22812232    -0.46392027  0.55352785  0.09487030 #> James      -1.92962434    -0.40513080     0.17677963  0.09872346 -0.10293847 #> Jacob       0.87437138     0.79843798     0.12347308 -0.59213740 -0.60277392 #> Jane       -0.62445278    -0.07975479    -1.11263323 -0.02350148  0.35728086 #> Johanna    -0.07493721     1.09576027     1.26565956  0.76644845  1.28634283 #>            genes.V3 #> John     1.91475732 #> Julia   -0.22397553 #> James    0.90471382 #> Jacob    0.61770832 #> Jane    -0.51684156 #> Johanna  1.82392983  # Use with formula interface (see other vignettes) # sopls(meta ~ proteins + genes, data = df1)  # Use with single list interface (see other vignettes) # mfa(df1[c(1,3)], ncomp = 3)"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_B_ANOVA.html","id":"analysis-of-variance-anova","dir":"Articles","previous_headings":"","what":"Analysis of Variance (ANOVA)","title":"B. Analysis of Variance","text":"vignette focus univariate ANOVA various designs including fixed mixed effects, briefly introduce multivariate ANOVA. Models using random effects run mixlm package. following models demonstrated: * Fixed effect models * One-way ANOVA * Two-way ANOVA * Covariates ANOVA * Fixed effect nested ANOVA * Linear mixed models * Classical LMM * Repeated measures LMM","code":""},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_B_ANOVA.html","id":"simulated-data","dir":"Articles","previous_headings":"Analysis of Variance (ANOVA)","what":"Simulated data","title":"B. Analysis of Variance","text":"start simulating data use examples . fictitious setup, milk yield measured function feed type (low/high protein content), cow breed, bull identity, daughter age. three first factors crossed balanced, daughter nested bull. yield generated linear model noise.","code":"set.seed(123) dat <- data.frame(   feed  = factor(rep(rep(c(\"low\",\"high\"), each=6), 4)),   breed = factor(rep(c(\"NRF\",\"Hereford\",\"Angus\"), 16)),   bull  = factor(rep(LETTERS[1:4], each = 12)),   daughter = factor(c(rep(letters[1:4], 3), rep(letters[5:8], 3), rep(letters[9:12], 3), rep(letters[13:16], 3))),   age   = round(rnorm(48, mean = 36, sd = 5)) ) dat$yield <- 150*with(dat, 10 + 3 * as.numeric(feed) + as.numeric(breed) +                          2 * as.numeric(bull) + 1 * as.numeric(sample(dat$daughter, 48)) +                          0.5 * age + rnorm(48, sd = 2)) head(dat) #>   feed    breed bull daughter age    yield #> 1  low      NRF    A        a  33 5541.301 #> 2  low Hereford    A        b  35 6862.560 #> 3  low    Angus    A        c  44 6954.182 #> 4  low      NRF    A        d  36 8125.363 #> 5  low Hereford    A        a  37 7344.458 #> 6  low    Angus    A        b  45 7987.227"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_B_ANOVA.html","id":"fixed-effect-models","dir":"Articles","previous_headings":"Analysis of Variance (ANOVA)","what":"Fixed effect models","title":"B. Analysis of Variance","text":"simplest form ANOVA fixed effect model. model assumes levels factor fixed source variation factor .","code":""},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_B_ANOVA.html","id":"one-way-anova","dir":"Articles","previous_headings":"Analysis of Variance (ANOVA) > Fixed effect models","what":"One-way ANOVA","title":"B. Analysis of Variance","text":"assess feed effect yield, .e., following model: yieldan=Î¼+feeda+Ïµanyield_{} = \\mu + feed_a + \\epsilon_{} aa feed level nn observation within feed level. ANOVA table one can look Pr(>F) see feed factor significant effect yield. summary function can used get information underlying regression model. Basic model assessment can done using plot function.","code":"mod <- lm(yield ~ feed, data = dat) print(anova(mod)) #> Analysis of Variance Table #>  #> Response: yield #>           Df   Sum Sq Mean Sq F value Pr(>F) #> feed       1  1755955 1755955  2.3294 0.1338 #> Residuals 46 34675246  753810 summary(mod) #>  #> Call: #> lm(formula = yield ~ feed, data = dat) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -1904.2  -552.8  -135.1   581.1  1898.4  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)   7254.3      125.3  57.887   <2e-16 *** #> feed(high)    -191.3      125.3  -1.526    0.134     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> s: 868.2 on 46 degrees of freedom #> Multiple R-squared: 0.0482, #> Adjusted R-squared: 0.02751  #> F-statistic: 2.329 on 1 and 46 DF,  p-value: 0.1338 old.par <- par(mfrow=c(2,1), mar=c(4,4,2,0.5)) plot(mod, which = 1:2, ask=FALSE) par(old.par)"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_B_ANOVA.html","id":"two-way-crossed-effects-anova","dir":"Articles","previous_headings":"Analysis of Variance (ANOVA) > Fixed effect models","what":"Two-way crossed effects ANOVA","title":"B. Analysis of Variance","text":"assess feed breed effects interaction effect yield, .e., following model: yieldabn=Î¼+feeda+breedb+(feed:breed)ab+Ïµabnyield_{abn} = \\mu + feed_a + breed_b + (feed:breed)_{ab} + \\epsilon_{abn} aa feed level nn observation within feed level. interaction effect significant, can simplify model : yieldabn=Î¼+feeda+breedb+Ïµabnyield_{abn} = \\mu + feed_a + breed_b + \\epsilon_{abn}","code":"mod <- lm(yield ~ feed*breed, data = dat) print(anova(mod)) #> Analysis of Variance Table #>  #> Response: yield #>            Df   Sum Sq Mean Sq F value Pr(>F) #> feed        1  1755955 1755955  2.1892 0.1464 #> breed       2   126874   63437  0.0791 0.9241 #> feed:breed  2   860065  430032  0.5361 0.5890 #> Residuals  42 33688307  802103 mod <- lm(yield ~ feed+breed, data = dat) print(anova(mod)) #> Analysis of Variance Table #>  #> Response: yield #>           Df   Sum Sq Mean Sq F value Pr(>F) #> feed       1  1755955 1755955  2.2363 0.1419 #> breed      2   126874   63437  0.0808 0.9225 #> Residuals 44 34548372  785190"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_B_ANOVA.html","id":"types-of-sums-of-squares","dir":"Articles","previous_headings":"Analysis of Variance (ANOVA) > Fixed effect models","what":"Types of sums of squares","title":"B. Analysis of Variance","text":"classical way defining sums squares Type , Type II, Type III, described documentation Anova() function car package. two-way ANOVA model, Type Type II sums squares , Type III differs. balanced data, happens contrast coding treatment/reference type.","code":"# Type I - Sequential testing, including one and one effect print(anova(mod)) #> Analysis of Variance Table #>  #> Response: yield #>           Df   Sum Sq Mean Sq F value Pr(>F) #> feed       1  1755955 1755955  2.2363 0.1419 #> breed      2   126874   63437  0.0808 0.9225 #> Residuals 44 34548372  785190  # Type II - Testing each term after all others,  # except ignoring the term's higher-order relatives print(Anova(mod, type=\"II\")) #> Anova Table (Type II tests) #>  #> Response: yield #>             Sum Sq Df F value Pr(>F) #> feed       1755955  1  2.2363 0.1419 #> breed       126874  2  0.0808 0.9225 #> Residuals 34548372 44  # Type III - Testing each term after all others, # including the term's higher-order relatives print(Anova(mod, type=\"III\")) #> Anova Table (Type III tests) #>  #> Response: yield #>                 Sum Sq Df   F value Pr(>F)     #> (Intercept) 2525982362  1 3217.0322 <2e-16 *** #> feed           1755955  1    2.2363 0.1419     #> breed           126874  2    0.0808 0.9225     #> Residuals     34548372 44                      #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_B_ANOVA.html","id":"contrast-codings","dir":"Articles","previous_headings":"Analysis of Variance (ANOVA) > Fixed effect models","what":"Contrast codings","title":"B. Analysis of Variance","text":"contrast coding can specified factor model. default reference coding, codings can specified using contrasts Since running lm() mixlm package, can use contrasts argument specify coding effects simultaneously. Instead specifying contrasts specific model, also possible set contrasts globally session. means subsequent models, unless specified otherwise, use specified contrasts.","code":"# Sum-coding, i.e., the sum of all levels is zero and all effects # are orthogonal in the balanced case. mod <- lm(yield ~ feed*breed, data = dat, contrasts=\"contr.sum\") print(Anova(mod, type=\"III\")) #> Anova Table (Type III tests) #>  #> Response: yield #>                 Sum Sq Df   F value Pr(>F)     #> (Intercept) 2525982362  1 3149.2013 <2e-16 *** #> feed           1755955  1    2.1892 0.1464     #> breed           126874  2    0.0791 0.9241     #> feed:breed      860065  2    0.5361 0.5890     #> Residuals     33688307 42                      #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1  # Weighted coding, i.e., the sum of all levels is zero and the effects # are weighted by the number of levels, effect-wise. mod <- lm(yield ~ feed*breed, data = dat, contrasts=\"contr.weighted\") print(Anova(mod, type=\"III\")) #> Anova Table (Type III tests) #>  #> Response: yield #>                 Sum Sq Df   F value Pr(>F)     #> (Intercept) 2525982362  1 3149.2013 <2e-16 *** #> feed           1755955  1    2.1892 0.1464     #> breed           126874  2    0.0791 0.9241     #> feed:breed      860065  2    0.5361 0.5890     #> Residuals     33688307 42                      #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 options(contrasts = c(\"contr.sum\", \"contr.poly\"))"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_B_ANOVA.html","id":"covariates-in-anova","dir":"Articles","previous_headings":"Analysis of Variance (ANOVA) > Fixed effect models","what":"Covariates in ANOVA","title":"B. Analysis of Variance","text":"Adding covariates ANOVA model straightforward. add age cow covariate two-way ANOVA model. model becomes: yieldabn=Î¼+feeda+breedb+(feed:breed)ab+ageâxabn+Ïµabn,yield_{abn} = \\mu + feed_a + breed_b + (feed:breed)_{ab} + age\\cdot x_{abn} + \\epsilon_{abn}, xabnx_{abn} age cow ageage linear coefficient.","code":"mod <- lm(yield ~ feed*breed + age, data = dat) print(Anova(mod, type=\"II\")) #> Anova Table (Type II tests) #>  #> Response: yield #>              Sum Sq Df F value    Pr(>F)     #> feed        1718601  1  2.9288 0.0945692 .   #> breed         13015  2  0.0111 0.9889747     #> age         9629682  1 16.4106 0.0002214 *** #> feed:breed   793690  2  0.6763 0.5140804     #> Residuals  24058625 41                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_B_ANOVA.html","id":"fixed-effect-nested-anova","dir":"Articles","previous_headings":"Analysis of Variance (ANOVA) > Fixed effect models","what":"Fixed effect nested ANOVA","title":"B. Analysis of Variance","text":"case nested factors, can specify model. current model, assume bulls fixed effects interested daughters nested bulls. case, daughters special attributes interfere estimation bull effect, assume random effects. model becomes: yieldabn=Î¼+bulla+daugterb()+Ïµabn,yield_{abn} = \\mu + bull_a + daugter_{b()} + \\epsilon_{abn},","code":"mod <- lm(yield ~ bull + daughter%in%bull, data = dat) print(Anova(mod, type=\"II\")) #> Note: model has aliased coefficients #>       sums of squares computed by model comparison #> Anova Table (Type II tests) #>  #> Response: yield #>                 Sum Sq Df F value Pr(>F) #> bull           2130879  3  0.8630 0.4703 #> bull:daughter  7961749 12  0.8061 0.6421 #> Residuals     26338573 32"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_B_ANOVA.html","id":"linear-mixed-models","dir":"Articles","previous_headings":"Analysis of Variance (ANOVA)","what":"Linear mixed models","title":"B. Analysis of Variance","text":"Adding random effects model can done either using least squares modelling mixlm package using ML/REML estimation lme4 package (similar).","code":""},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_B_ANOVA.html","id":"classical---mixlm","dir":"Articles","previous_headings":"Analysis of Variance (ANOVA) > Linear mixed models","what":"Classical - mixlm","title":"B. Analysis of Variance","text":"Using mixlm package, specify random effects using r() function. assume bull random selection population bulls, can specify random effect focusing feed. model looks like fixed effect model, error structure different: yieldabn=Î¼+feeda+bullb+(feed:bull)ab+Ïµabnyield_{abn} = \\mu + feed_a + bull_b + (feed:bull)_{ab} + \\epsilon_{abn} addition ordinary ANOVA table, overview variance components expected mean squares printed.","code":"mod <- lm(yield ~ feed*r(bull), data = dat) print(Anova(mod, type=\"II\")) #> Analysis of variance (unrestricted model) #> Response: yield #>              Mean Sq      Sum Sq Df F value Pr(>F) #> feed      1755954.98  1755954.98  1    8.20 0.0644 #> bull       710292.91  2130878.72  3    3.32 0.1755 #> feed:bull  214160.94   642482.83  3    0.27 0.8477 #> Residuals  797547.10 31901884.17 40       -      - #>  #>             Err.term(s) Err.df VC(SS) #> 1 feed              (3)      3  fixed #> 2 bull              (3)      3  41344 #> 3 feed:bull         (4)     40 -97231 #> 4 Residuals           -      - 797547 #> (VC = variance component) #>  #>           Expected mean squares #> feed      (4) + 6 (3) + 24 Q[1] #> bull      (4) + 6 (3) + 12 (2)  #> feed:bull (4) + 6 (3)           #> Residuals (4)"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_B_ANOVA.html","id":"restrictions","dir":"Articles","previous_headings":"Analysis of Variance (ANOVA) > Linear mixed models","what":"Restrictions","title":"B. Analysis of Variance","text":"mixlm package unrestricted models default, possible turn restriction. effects tests performed variance components estimated.","code":"mod <- lm(yield ~ feed*r(bull), data = dat, unrestricted = FALSE) print(Anova(mod, type=\"II\")) #> Analysis of variance (restricted model) #> Response: yield #>              Mean Sq      Sum Sq Df F value Pr(>F) #> feed      1755954.98  1755954.98  1    8.20 0.0644 #> bull       710292.91  2130878.72  3    0.89 0.4543 #> feed:bull  214160.94   642482.83  3    0.27 0.8477 #> Residuals  797547.10 31901884.17 40       -      - #>  #>             Err.term(s) Err.df VC(SS) #> 1 feed              (3)      3  fixed #> 2 bull              (4)     40  -7271 #> 3 feed:bull         (4)     40 -97231 #> 4 Residuals           -      - 797547 #> (VC = variance component) #>  #>           Expected mean squares #> feed      (4) + 6 (3) + 24 Q[1] #> bull      (4) + 12 (2)          #> feed:bull (4) + 6 (3)           #> Residuals (4)"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_B_ANOVA.html","id":"repeated-measures","dir":"Articles","previous_headings":"Analysis of Variance (ANOVA) > Linear mixed models","what":"Repeated Measures","title":"B. Analysis of Variance","text":"repeated measures model can mixed model random effect repeated measures, repeated measures nested subjects. Longitudinal data common example repeated measures data, replicates repetitions time within subject. subset simulated data, can add longitudinal effect model, case random variation three time-points. time effect necessarily need random.  Now feed effect, individuals (daughters), time effect repeated inside daughters, model: yieldait=Î¼+daughteri+feeda+timet+(feed:time)+Ïµaityield_{ait} = \\mu + daughter_i + feed_a + time_t + (feed:time)_{} + \\epsilon_{ait}","code":"set.seed(123) long <- dat[c(1:4,9:12), c(\"feed\", \"daughter\", \"yield\")] long <- rbind(long, long, long) long$daughter <- factor(long$daughter) # Remove redundant daughter long$time  <- factor(rep(1:3, each=8)) long$yield <- long$yield + rnorm(24, sd = 100) + rep(c(-200,0,200), each=8) plot(yield~daughter, data=long) mod <- lm(yield ~ r(daughter) + feed*r(time), data = long, unrestricted=FALSE) print(Anova(mod, type=\"II\")) #> Analysis of variance (restricted model) #> Response: yield #>              Mean Sq     Sum Sq Df F value Pr(>F) #> daughter  1085642.42 3256927.25  3   1.854 0.1808 #> feed        21759.92   21759.92  1   7.079 0.1170 #> time       213465.79  426931.58  2   0.365 0.7005 #> feed:time    3073.71    6147.41  2   0.005 0.9948 #> Residuals  585554.07 8783311.09 15       -      - #>  #>             Err.term(s) Err.df  VC(SS) #> 1 daughter          (5)     15   83348 #> 2 feed              (4)      2   fixed #> 3 time              (5)     15  -46511 #> 4 feed:time         (5)     15 -145620 #> 5 Residuals           -      -  585554 #> (VC = variance component) #>  #>           Expected mean squares #> daughter  (5) + 6 (1)           #> feed      (5) + 4 (4) + 12 Q[2] #> time      (5) + 8 (3)           #> feed:time (5) + 4 (4)           #> Residuals (5)"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_B_ANOVA.html","id":"reml","dir":"Articles","previous_headings":"Analysis of Variance (ANOVA) > Linear mixed models","what":"REML","title":"B. Analysis of Variance","text":"REML estimation can done directly lme4 package, can also mixlm package, leveraging r() function. see mixlm transforms model lme4, can print model. observe (1 | bull) (1 | feed:bull) added model, means random intercepts added bull interaction.","code":"mod <- lm(yield ~ feed*r(bull), data = dat, REML = TRUE) #> boundary (singular) fit: see help('isSingular') print(Anova(mod, type=\"III\")) #> Analysis of Deviance Table (Type III Wald chisquare tests) #>  #> Response: yield #>                 Chisq Df Pr(>Chisq)     #> (Intercept) 3350.9550  1     <2e-16 *** #> feed           2.3294  1     0.1269     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 print(mod) #> Linear mixed model fit by REML ['lmerMod'] #> Formula: yield ~ feed + (1 | bull) + (1 | feed:bull) #>    Data: dat #> REML criterion at convergence: 760.7979 #> Random effects: #>  Groups    Name        Std.Dev. #>  feed:bull (Intercept)   0.0    #>  bull      (Intercept)   0.0    #>  Residual              868.2    #> Number of obs: 48, groups:  feed:bull, 8; bull, 4 #> Fixed Effects: #> (Intercept)        feed1   #>      7254.3       -191.3   #> optimizer (nloptwrap) convergence code: 0 (OK) ; 0 optimizer warnings; 1 lme4 warnings"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_B_ANOVA.html","id":"multivariate-anova-manova","dir":"Articles","previous_headings":"Analysis of Variance (ANOVA)","what":"Multivariate ANOVA (MANOVA)","title":"B. Analysis of Variance","text":"Basic multivariate ANOVA can done using lm() function, create matrix responses. case, add mastitis effect model. model becomes: [yieldabn|mastitisabn]=Î¼+feeda+breedb+(feed:breed)ab+Ïµabn,[yield_{abn} | mastitis_{abn}] = \\mu + feed_a + breed_b + (feed:breed)_{ab} + \\epsilon_{abn}, model terms now vectors matching number responses. test statistics joint responses, form default Pillaiâs test statistics. statistics can produced follows: summary function can used get information underlying regression model, revealing regressions performed separately response.","code":"dat$mastitis <- as.numeric(dat$breed) + as.numeric(dat$feed) + rnorm(48, sd = 1) mod <- lm(cbind(yield,mastitis) ~ feed*breed, data = dat) print(Anova(mod, type=\"II\")) #>  #> Type II MANOVA Tests: Pillai test statistic #>            Df test stat approx F num Df den Df   Pr(>F)     #> feed        1   0.16426   4.0292      2     41 0.025260 *   #> breed       2   0.47415   6.5256      4     84 0.000127 *** #> feed:breed  2   0.14929   1.6939      4     84 0.159025     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 print(Anova(mod, type=\"II\", test=\"Wilks\")) #>  #> Type II MANOVA Tests: Wilks test statistic #>            Df test stat approx F num Df den Df   Pr(>F)     #> feed        1   0.83574   4.0292      2     41  0.02526 *   #> breed       2   0.52761   7.7226      4     82 2.48e-05 *** #> feed:breed  2   0.85375   1.6865      4     82  0.16100     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 print(Anova(mod, type=\"II\", test=\"Hotelling-Lawley\")) #>  #> Type II MANOVA Tests: Hotelling-Lawley test statistic #>            Df test stat approx F num Df den Df    Pr(>F)     #> feed        1   0.19655   4.0292      2     41   0.02526 *   #> breed       2   0.89201   8.9201      4     80 5.227e-06 *** #> feed:breed  2   0.16775   1.6775      4     80   0.16336     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 print(Anova(mod, type=\"II\", test=\"Roy\")) #>  #> Type II MANOVA Tests: Roy test statistic #>            Df test stat approx F num Df den Df    Pr(>F)     #> feed        1   0.19655   4.0292      2     41   0.02526 *   #> breed       2   0.88826  18.6535      2     42 1.595e-06 *** #> feed:breed  2   0.14285   2.9999      2     42   0.06056 .   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 summary(mod) #> Response yield : #>  #> Call: #> lm(formula = yield ~ feed * breed, data = dat) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -2123.5  -506.2  -109.0   625.8  1762.0  #>  #> Coefficients: #>                            Estimate Std. Error t value Pr(>|t|)     #> (Intercept)                 7254.28     129.27  56.118   <2e-16 *** #> feed(high)                  -191.27     129.27  -1.480    0.146     #> breed(Angus)                  40.78     182.81   0.223    0.825     #> breed(Hereford)              -72.52     182.81  -0.397    0.694     #> feed(high):breed(Angus)      116.25     182.81   0.636    0.528     #> feed(high):breed(Hereford)    71.26     182.81   0.390    0.699     #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 895.6 on 42 degrees of freedom #> Multiple R-squared:  0.07529,    Adjusted R-squared:  -0.03479  #> F-statistic: 0.6839 on 5 and 42 DF,  p-value: 0.6382 #>  #>  #> Response mastitis : #>  #> Call: #> lm(formula = mastitis ~ feed * breed, data = dat) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -2.25984 -0.60241  0.07629  0.60307  1.82843  #>  #> Coefficients: #>                            Estimate Std. Error t value Pr(>|t|)     #> (Intercept)                  3.5537     0.1316  26.994  < 2e-16 *** #> feed(high)                  -0.3506     0.1316  -2.663   0.0109 *   #> breed(Angus)                -0.8802     0.1862  -4.728 2.56e-05 *** #> breed(Hereford)             -0.1653     0.1862  -0.888   0.3795     #> feed(high):breed(Angus)     -0.3722     0.1862  -1.999   0.0521 .   #> feed(high):breed(Hereford)   0.3991     0.1862   2.144   0.0379 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> Residual standard error: 0.9121 on 42 degrees of freedom #> Multiple R-squared:  0.5399, Adjusted R-squared:  0.4852  #> F-statistic: 9.858 on 5 and 42 DF,  p-value: 2.755e-06"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_C_ASCA.html","id":"analysis-of-variance-simultaneous-component-analysis-asca","dir":"Articles","previous_headings":"","what":"Analysis of Variance Simultaneous Component Analysis (ASCA)","title":"C. ASCA","text":"ANOVA part ASCA includes possible variations ANOVA demonstrated ANOVA section . Also, generalized linear models (GLM) can used. following theory exemplified: Permutation testing Random effects Scores loadings Data confidence ellipsoids Combined effects Numeric effects ANOVA-PCA (APCA) PC-ANOVA MSCA LiMM-PCA","code":""},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_C_ASCA.html","id":"hdanova","dir":"Articles","previous_headings":"Analysis of Variance Simultaneous Component Analysis (ASCA)","what":"HDANOVA","title":"C. ASCA","text":"ANOVA part ASCA includes possible variations ANOVA demonstrated ANOVA vignette . Also generalized linear models (GLM) can used. start demonstrating HDANOVA fixed effect model two factors interactions. summary shows candy effect largest far.","code":"# Load Candy data data(candies)  # Fit ASCA model mod <- hdanova(assessment ~ candy*assessor, data=candies) summary(mod) #> High-Dimensional Analysis of Variance fitted using 'lm' (Linear Model)  #> - SS type II,  coding, restricted model, least squares estimation  #>                 Sum.Sq. Expl.var.(%) #> candy          33416.66        74.48 #> assessor        1961.37         4.37 #> assessor:candy  3445.73         7.68 #> Residuals       6043.52        13.47"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_C_ASCA.html","id":"basic-asca","dir":"Articles","previous_headings":"Analysis of Variance Simultaneous Component Analysis (ASCA)","what":"Basic ASCA","title":"C. ASCA","text":"use ASCA function directly, get result HDANOVA, addition PCAs effect matrices computed. can also done sequentially, expanding model step step.","code":"# Fit ASCA model mod <- asca(assessment ~ candy*assessor, data=candies) summary(mod) #> Anova Simultaneous Component Analysis fitted using 'lm' (Linear Model)  #> - SS type II,  coding, restricted model, least squares estimation  #>                 Sum.Sq. Expl.var.(%) #> candy          33416.66        74.48 #> assessor        1961.37         4.37 #> assessor:candy  3445.73         7.68 #> Residuals       6043.52        13.47 # Fit ASCA model step by step mod_hd <- hdanova(assessment ~ candy*assessor, data=candies) mod_asca <- sca(mod_hd)"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_C_ASCA.html","id":"permutation-testing","dir":"Articles","previous_headings":"Analysis of Variance Simultaneous Component Analysis (ASCA) > Basic ASCA","what":"Permutation testing","title":"C. ASCA","text":"get insight, can perform permutation testing factors. use approximate permutation. see effects significant, Candy effect dominating one. (P-values rounded 0.001 0 print). can also visualised looking sums--squares values obtained permutation compared original value.  Permutations can also performed post processing ASCA object.","code":"# Permutation testing (default = 1000 permutations, if not specified) mod <- asca(assessment ~ candy*assessor, data=candies, permute=TRUE) summary(mod) #> Anova Simultaneous Component Analysis fitted using 'lm' (Linear Model)  #> - SS type II,  coding, restricted model, least squares estimation, 1000 permutations  #>                 Sum.Sq. Expl.var.(%) p-value #> candy          33416.66        74.48       0 #> assessor        1961.37         4.37       0 #> assessor:candy  3445.73         7.68       0 #> Residuals       6043.52        13.47      NA permutationplot(mod, factor = \"assessor\") mod <- asca(assessment ~ candy*assessor, data=candies) mod <- permutation(mod)"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_C_ASCA.html","id":"random-effects","dir":"Articles","previous_headings":"Analysis of Variance Simultaneous Component Analysis (ASCA) > Basic ASCA","what":"Random effects","title":"C. ASCA","text":"One can argue assessors random effects, thus handled model. can adding r() around assessor term. See also LiMM-PCA REML estimation version.","code":"# Fit ASCA model with random assessor mod.mixed <- asca(assessment ~ candy*r(assessor), data=candies, permute=TRUE) summary(mod.mixed) #> Anova Simultaneous Component Analysis fitted using 'lmm' (Linear Mixed Model)  #> - SS type II,  coding, restricted model, least squares estimation, 1000 permutations  #>                 Sum.Sq. Expl.var.(%) p-value #> candy          33416.66        74.48       0 #> assessor        1961.37         4.37       0 #> assessor:candy  3445.73         7.68       0 #> Residuals       6043.52        13.47      NA"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_C_ASCA.html","id":"scores-and-loadings","dir":"Articles","previous_headings":"Analysis of Variance Simultaneous Component Analysis (ASCA) > Basic ASCA","what":"Scores and loadings","title":"C. ASCA","text":"effects can visualised , e.g., loading score plots assess relations variables, objects factors. factor specified, first factor plotted.  specific factor can plotted specifying factor name number.  Score plots can modified, e.g., omitting backprojections adding spider plots.  directions scores loadings expected, signs can flipped.  scores loadings can extracted analysis. Finally, scores loadings can combined biplot.","code":"par.old <- par(mfrow=c(2,1), mar=c(4,4,2,1)) loadingplot(mod, scatter=TRUE, labels=\"names\", main=\"Candy loadings\") scoreplot(mod, main=\"Candy scores\") par(par.old) par.old <- par(mfrow=c(2,1), mar=c(4,4,2,1)) loadingplot(mod, factor=\"assessor\", scatter=TRUE, labels=\"names\", main=\"Assessor loadings\") scoreplot(mod, factor=\"assessor\", main=\"Assessor scores\") par(par.old) par.old <- par(mfrow=c(2,1), mar=c(4,4,2,1)) scoreplot(mod, factor=\"assessor\", main=\"Assessor scores\", projections=FALSE) scoreplot(mod, factor=\"assessor\", main=\"Assessor scores\", spider=TRUE) par(par.old) mod <- signflip(mod, factor=\"candy\", comp=1) par.old <- par(mfrow=c(2,1), mar=c(4,4,2,1)) loadingplot(mod, scatter=TRUE, labels=\"names\", main=\"Candy loadings\") scoreplot(mod, main=\"Candy scores\") par(par.old) L <- loadings(mod, factor=\"candy\") head(L) #>                 Comp 1        Comp 2      Comp 3      Comp 4 #> transparent -0.3927649  0.0279168248 -0.30598369  0.77398098 #> acid         0.1649285 -0.8042012208  0.47650301  0.24192158 #> sweet        0.2235032  0.4607791525  0.52330000 -0.01751194 #> raspberry    0.2277610  0.3663430297  0.35862959  0.50808527 #> texture      0.4302019 -0.0004154248 -0.13000106  0.22107937 #> strength    -0.3653312  0.0694885591  0.09828578 -0.09582978 S <- scores(mod, factor=\"candy\") head(S) #>     Comp 1   Comp 2     Comp 3    Comp 4 #> 1 16.81343 4.844756 -0.2914198 0.1811588 #> 2 16.81343 4.844756 -0.2914198 0.1811588 #> 3 16.81343 4.844756 -0.2914198 0.1811588 #> 4 16.81343 4.844756 -0.2914198 0.1811588 #> 5 16.81343 4.844756 -0.2914198 0.1811588 #> 6 16.81343 4.844756 -0.2914198 0.1811588 biplot(mod, factor=\"candy\", labels=\"names\")"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_C_ASCA.html","id":"data-ellipsoids-and-confidence-ellipsoids","dir":"Articles","previous_headings":"Analysis of Variance Simultaneous Component Analysis (ASCA) > Basic ASCA","what":"Data ellipsoids and confidence ellipsoids","title":"C. ASCA","text":"emphasize factor levels assess factor level differences, can add data ellipsoids confidence ellipsoids score plot. confidence ellipsoids built assumption balanced data, theories built around crossed designs.  repeat mixed model, see types ellipsoids change together change denominator term underlying ANOVA model. noted theory confidence ellipsoids mixed models fully developed, interpretation done caution.","code":"par.old <- par(mfrow=c(2,1), mar=c(4,4,2,1)) scoreplot(mod, ellipsoids=\"data\", factor=\"candy\", main=\"Data ellipsoids\") scoreplot(mod, ellipsoids=\"confidence\", factor=\"candy\", main=\"Confidence ellipsoids\") par(par.old) par.old <- par(mfrow=c(2,1), mar=c(4,4,2,1)) scoreplot(mod.mixed, ellipsoids=\"data\", factor=\"candy\", main=\"Data ellipsoids\") scoreplot(mod.mixed, ellipsoids=\"confidence\", factor=\"candy\", main=\"Confidence ellipsoids\") par(par.old)"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_C_ASCA.html","id":"combined-effects","dir":"Articles","previous_headings":"Analysis of Variance Simultaneous Component Analysis (ASCA) > Basic ASCA","what":"Combined effects","title":"C. ASCA","text":"cases, can interest combine effects ASCA. , use example Caldana data combine light effect time:light interaction using comb() function. combined effects time factor, scores can plotted time.","code":"# Load Caldana data data(caldana)  # Combined effects mod.comb <- asca(compounds ~ time + comb(light + light:time), data=caldana) summary(mod.comb) #> Anova Simultaneous Component Analysis fitted using 'lm' (Linear Model)  #> - SS type II,  coding, restricted model, least squares estimation  #>                  Sum.Sq. Expl.var.(%) #> time              154.58         9.69 #> light+light:time  349.64        21.92 #> Residuals        1091.14        68.39 # Scores plotted as a function of time par.old <- par(mfrow=c(2,1), mar = c(4,4,1,1)) timeplot(mod.comb, factor=\"light\", time=\"time\", comb=2, comp=1, x_time=TRUE) timeplot(mod.comb, factor=\"light\", time=\"time\", comb=2, comp=2, x_time=TRUE) par(par.old)"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_C_ASCA.html","id":"quantitative-effects","dir":"Articles","previous_headings":"Analysis of Variance Simultaneous Component Analysis (ASCA) > Basic ASCA","what":"Quantitative effects","title":"C. ASCA","text":"Quantitative effects, -called covariates, can also included model, though use ASCA limited ANOVA estimation explained variance, used subsequent PCA permutation testing. demonstrate using Caldana data , now recode time effect quantitative effect, meaning handled linear continuous effect.","code":"caldanaNum <- caldana caldanaNum$time <- as.numeric(as.character(caldanaNum$time)) mod.num <- asca(compounds ~ time*light, data = caldanaNum) summary(mod.num) #> Anova Simultaneous Component Analysis fitted using 'lm' (Linear Model)  #> - SS type II,  coding, restricted model, least squares estimation  #>            Sum.Sq. Expl.var.(%) #> time         55.42         3.47 #> light       102.49         6.42 #> light:time  109.56         6.87 #> Residuals  1327.90        83.23"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_C_ASCA.html","id":"anova-pca-apca","dir":"Articles","previous_headings":"Analysis of Variance Simultaneous Component Analysis (ASCA)","what":"ANOVA-PCA (APCA)","title":"C. ASCA","text":"APCA differs ASCA adding error term model performing PCA instead backprojecting errors afterwards. Plot scores loadings.","code":"# Fit APCA model modp <- apca(assessment ~ candy*assessor, data=candies) summary(modp) #> Anova Principal Component Analysis fitted using 'lm' (Linear Model)  #> - SS type II,  coding, restricted model, least squares estimation  #>                 Sum.Sq. Expl.var.(%) #> candy          33416.66        74.48 #> assessor        1961.37         4.37 #> assessor:candy  3445.73         7.68 #> Residuals       6043.52        13.47 par.old <- par(mfrow=c(2,1), mar=c(4,4,2,1)) loadingplot(modp, scatter=TRUE, labels=\"names\", main=\"Candy loadings\") scoreplot(modp, main=\"Candy scores\") par(par.old)"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_C_ASCA.html","id":"pc-anova","dir":"Articles","previous_headings":"Analysis of Variance Simultaneous Component Analysis (ASCA)","what":"PC-ANOVA","title":"C. ASCA","text":"PC-ANOVA, PCA first applied data scores subjected ANOVA, effectively reversing roles ASCA. means one ANOVA tables summary output. example, chosen use number components explain least 90% variation data. creating score loading plots PC-ANOVA, âglobalâ scores loadings shown, factors can still used manipulating symbols.","code":"mod.pc <- pcanova(assessment ~ candy * assessor, data = candies, ncomp = 0.9) print(mod.pc) #> PC-ANOVA - Principal Components Analysis of Variance #>  #> Call: #> pcanova(formula = assessment ~ candy * assessor, data = candies,     ncomp = 0.9) summary(mod.pc) #> PC-ANOVA - Principal Components Analysis of Variance #>  #> Call: #> pcanova(formula = assessment ~ candy * assessor, data = candies,     ncomp = 0.9) #> $`Comp. 1` #> Anova Table (Type II tests) #>  #> Response: assessment #>                 Sum Sq  Df  F value  Pr(>F)     #> candy          31470.6   4 780.1762 < 2e-16 *** #> assessor         224.9  10   2.2304 0.02089 *   #> candy:assessor   707.7  40   1.7545 0.01158 *   #> Residuals       1109.3 110                      #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> $`Comp. 2` #> Anova Table (Type II tests) #>  #> Response: assessment #>                Sum Sq  Df F value    Pr(>F)     #> candy          1573.8   4 33.1604 < 2.2e-16 *** #> assessor        278.3  10  2.3455 0.0150274 *   #> candy:assessor 1053.3  40  2.2193 0.0005888 *** #> Residuals      1305.2 110                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> $`Comp. 3` #> Anova Table (Type II tests) #>  #> Response: assessment #>                 Sum Sq  Df F value    Pr(>F)     #> candy           307.12   4   7.646 1.790e-05 *** #> assessor       1006.62  10  10.024 8.574e-12 *** #> candy:assessor  484.02  40   1.205    0.2229     #> Residuals      1104.61 110                       #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 par.old <- par(mfrow=c(2,1), mar=c(4,4,2,1)) loadingplot(mod.pc, scatter=TRUE, labels=\"names\", main=\"Global loadings\") scoreplot(mod.pc, main=\"Global scores\") par(par.old)"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_C_ASCA.html","id":"msca","dir":"Articles","previous_headings":"Analysis of Variance Simultaneous Component Analysis (ASCA)","what":"MSCA","title":"C. ASCA","text":"Multilevel Simultaneous Component Analysis (MSCA) version ASCA assumes single factor used -individuals factor, within-individuals assumed implicitly. Scoreplots can created -individuals factor within-individuals factor, level within-individuals factor.","code":"# Default MSCA model with a single factor mod.msca <- msca(assessment ~ candy, data=candies) summary(mod.msca) #> Multilevel Simultaneous Component Analysis fitted using 'lm' (Linear Model)  #> - SS type II,  coding, restricted model, least squares estimation  #>          Sum.Sq. Expl.var.(%) #> Between 33416.66        74.48 #> Within  11450.62        25.52 # Scoreplot for between-individuals factor scoreplot(mod.msca) # Scoreplot of within-individuals factor scoreplot(mod.msca, factor=\"within\") # .. per factor level par.old <- par(mfrow=c(3,2), mar=c(4,4,2,1), mgp=c(2,0.7,0)) for(i in 1:length(mod.msca$scores.within))  scoreplot(mod.msca, factor=\"within\", within_level=i,             main=paste0(\"Level: \", names(mod.msca$scores.within)[i]),            panel.first=abline(v=0,h=0,col=\"gray\",lty=2)) par(par.old)"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_C_ASCA.html","id":"limm-pca","dir":"Articles","previous_headings":"Analysis of Variance Simultaneous Component Analysis (ASCA)","what":"LiMM-PCA","title":"C. ASCA","text":"version LiMM-PCA also implemented HDANOVA. combines REML-estimated mixed models PCA scales back-projected errors according degrees freedom effective dimensions (user choice).  One can also use least squares estimation without REML. affects random effects scaling backprojections.","code":"# Default LiMM-PCA model with two factors and interaction, 8 PCA components mod.reml <- limmpca(assessment ~ candy*r(assessor), data=candies, pca.in=8) #> boundary (singular) fit: see help('isSingular') #> boundary (singular) fit: see help('isSingular') summary(mod.reml) #> LiMM-PCA fitted using 'lmm' (Linear Mixed Model)  #> - SS type II,  coding, restricted model, REML estimation  #>                 Sum.Sq. Expl.var.(%) #> candy          33415.98        74.73 #> assessor:candy   697.41         1.56 #> assessor         874.25         1.96 #> Residuals       7619.78        17.04 scoreplot(mod.reml, factor=\"candy\") # LiMM-PCA with least squares estimation and 8 PCA components mod.ls <- limmpca(assessment ~ candy*r(assessor), data=candies, REML=NULL, pca.in=8) summary(mod.ls) #> LiMM-PCA fitted using 'lmm' (Linear Mixed Model)  #> - SS type II,  coding, restricted model, least squares estimation  #>                 Sum.Sq. Expl.var.(%) #> candy          33415.98        74.73 #> assessor        1948.75         4.36 #> assessor:candy  3419.04         7.65 #> Residuals       5934.46        13.27 scoreplot(mod.ls)"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_C_ASCA.html","id":"repeated-measures","dir":"Articles","previous_headings":"Analysis of Variance Simultaneous Component Analysis (ASCA)","what":"Repeated measures","title":"C. ASCA","text":"revisit simulated data ANOVA vignette demonstrate ASCA repeated measures. data subset, time effect added, response extended multivariate case. Analysing data ASCA using least squares approach. Corresponding analysis using LiMM-PCA approach REML estimation.","code":"set.seed(123) # Original simulation dat <- data.frame(   feed  = factor(rep(rep(c(\"low\",\"high\"), each=6), 4)),   breed = factor(rep(c(\"NRF\",\"Hereford\",\"Angus\"), 16)),   bull  = factor(rep(LETTERS[1:4], each = 12)),   daughter = factor(c(rep(letters[1:4], 3), rep(letters[5:8], 3), rep(letters[9:12], 3), rep(letters[13:16], 3))),   age   = round(rnorm(48, mean = 36, sd = 5)) ) dat$yield <- 150*with(dat, 10 + 3 * as.numeric(feed) + as.numeric(breed) +                          2 * as.numeric(bull) + 1 * as.numeric(sample(dat$daughter, 48)) +                          0.5 * age + rnorm(48, sd = 2)) # Extended to repeated measures long <- dat[c(1:4,9:12), c(\"feed\", \"daughter\", \"yield\")] long <- rbind(long, long, long) long$daughter <- factor(long$daughter) # Remove redundant daughters long$time  <- factor(rep(1:3, each=8)) long$yield <- long$yield + rnorm(24, sd = 100) + rep(c(-200,0,200), each=8) # Made multiresponse (no added structure, only noise) long$yield <- I(matrix(rep(long$yield,10),nrow=length(long$yield),ncol=10)) + rnorm(length(long$yield)*10) # Least squares mixed model ASCA mod.rm.asca <- asca(yield ~ r(daughter) + feed*r(time), data = long) summary(mod.rm.asca) #> Anova Simultaneous Component Analysis fitted using 'lmm' (Linear Mixed Model)  #> - SS type II,  coding, restricted model, least squares estimation  #>                Sum.Sq. Expl.var.(%) #> daughter   31997318.91        23.01 #> feed         306570.25         0.22 #> time        4309830.00         3.10 #> feed:time     57834.68         0.04 #> Residuals 102393907.07        73.63 # REML mixed model LiMM-PCA mod.rm.limmpca <- limmpca(yield ~ r(daughter) + feed*r(time), data = long, pca.in=10) #> boundary (singular) fit: see help('isSingular') #> boundary (singular) fit: see help('isSingular') #> boundary (singular) fit: see help('isSingular') #> boundary (singular) fit: see help('isSingular') #> boundary (singular) fit: see help('isSingular') #> boundary (singular) fit: see help('isSingular') #> boundary (singular) fit: see help('isSingular') #> boundary (singular) fit: see help('isSingular') #> boundary (singular) fit: see help('isSingular') #> boundary (singular) fit: see help('isSingular') #> boundary (singular) fit: see help('isSingular') #> boundary (singular) fit: see help('isSingular') summary(mod.rm.limmpca) #> LiMM-PCA fitted using 'lmm' (Linear Mixed Model)  #> - SS type II,  coding, restricted model, REML estimation  #>                Sum.Sq. Expl.var.(%) #> feed         306570.25         0.22 #> feed:time         0.86         0.00 #> daughter    7163945.08         5.15 #> time              0.15         0.00 #> Residuals 115642343.08        83.16"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_D_additional.html","id":"additional-methods-of-hd-anova","dir":"Articles","previous_headings":"","what":"Additional methods of HD-ANOVA","title":"D. Additional methods","text":"examples shown HD-ANOVA methods share aspects ASCA. Principal Response Curves (PRC) Permutation Based MANOVA (PERMANOVA)","code":""},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_D_additional.html","id":"principal-response-curves-prc","dir":"Articles","previous_headings":"Additional methods of HD-ANOVA","what":"Principal Response Curves (PRC)","title":"D. Additional methods","text":"PRC implementation wrapped vegan package. single treatment factor time factor accepted together response matrix. first level treatment factor used reference level, effectively set zero. vegan package aimed community ecology, responses called species. case, responses compounds Caldana data. default plot PRC plot treatment + time:treatment. can see plot, âDarkâ level reference level levels contrasted.","code":"# Load Caldana data data(caldana)  prc.cal <- prc(compounds ~ light * time, caldana) summary(prc.cal) #>  #> Call: #> prc(formula = compounds ~ light * time, data = caldana)  #> Species scores: #>                    Alanine                     Valine  #>                   0.900828                   0.175768  #>                    Leucine                 Isoleucine  #>                  -0.657559                  -0.264687  #>                    Proline                     Serine  #>                   1.141926                  -0.051640  #>                  Threonine               beta-alanine  #>                   0.075174                  -0.726471  #>             Hydroxyproline                       GABA  #>                  -0.007045                  -1.087892  #>                  Aspartate                 Asparagine  #>                  -0.696076                  -0.338664  #>                 Methionine            O-acetyl-serine  #>                   0.863337                   0.205739  #>                  Glutamate              Phenylalanine  #>                  -0.337782                   1.245032  #>                  Ornithine                  Glutamine  #>                   0.041141                   1.302687  #>                     Lysine                   Tyrosine  #>                  -1.175389                  -0.606966  #>              Threonic-acid        Citrulline-Arginine  #>                  -0.323093                   0.526770  #>               Pyruvic-acid                Citric-acid  #>                   0.473488                  -0.414141  #>              Succinic-acid               Fumaric-acid  #>                  -0.690860                   0.005060  #>                 Malic-acid                Lactic-acid  #>                   0.006521                  -0.497413  #>              Glycolic-acid               Benzoic-acid  #>                   1.624649                  -0.141741  #>                Maleic-acid             Nicotinic-acid  #>                   0.767982                  -0.060987  #>              Itaconic-acid                Citramalate  #>                  -0.169012                   0.050705  #>     4-hydroxy-benzoic-acid Dehydroascorbic-acid-dimer  #>                  -0.191369                   0.062572  #>              Gluconic-acid       Dehydroascorbic-acid  #>                  -0.159411                  -0.108530  #>              Ascorbic-acid     4-Hydroxycinnamic-acid  #>                  -0.232603                  -0.133527  #>         Similar-to-Adenine                  Shikimate  #>                   0.010357                   0.878436  #>                 Erythritol                  Arabinose  #>                  -0.068112                  -0.110114  #>                   Arabitol                     Fucose  #>                  -0.337455                  -0.051972  #>                   Fructose                   Mannitol  #>                   3.606930                   0.215745  #>                  Galactose                    Glucose  #>                   0.097331                   2.777645  #>                    Sucrose                    Maltose  #>                   0.615215                  -0.263945  #>                  Trehalose                 Galactinol  #>                  -0.195746                   0.211351  #>               myo-inositol                     Uracil  #>                  -0.070161                  -1.067653  #>                 Putrescine               Ethanolamine  #>                  -0.210320                  -0.546516  #>                   Glycerol      Indole-3-acetonitrile  #>                  -0.146868                   0.185760  #>               Sinapic-acid              Palmitic-acid  #>                   0.131682                  -0.267378  #>          Octadecanoic-acid            Docosanoic-acid  #>                  -0.361142                  -0.299480  #>         Tetracosanoic-acid          Hexacosanoic-acid  #>                   0.060571                   0.188997  #>          Octacosanoic-acid  #>                   0.167153  #>  #> Coefficients for treatment + time:treatment interaction #> which are contrasts to treatment Dark  #> rows are treatment, columns are time #>                    0         5       10        20        40     80    160 #> Low Light  1.601e-15 -0.003685 -0.05458 -0.121789 -0.006526 0.1098 0.1833 #> Light      3.011e-15 -0.038250  0.10345 -0.084547  0.098440 0.2416 0.3368 #> High Light 1.620e-15 -0.010944 -0.01016  0.009301  0.312173 0.6746 0.7716 plot(prc.cal, species = FALSE, axis = 2, lwd = 4, legpos = \"bottomright\")"},{"path":"https://khliland.github.io/HDANOVA/articles/vignette_D_additional.html","id":"permutation-based-manova-permanova","dir":"Articles","previous_headings":"Additional methods of HD-ANOVA","what":"Permutation Based MANOVA (PERMANOVA)","title":"D. Additional methods","text":"PERMANOVA implementation wrapped vegan package. wrapper takes care specialised formatting needed inputs. default, 999 permutations performed factors, standard Multivariate ANOVA returned permutation-based p-values.","code":"permanova.cal <- permanova(compounds ~ light * time, caldana) permanova.cal #> Permutation test for adonis under reduced model #> Permutation: free #> Number of permutations: 999 #>  #> vegan::adonis2(formula = formula, data = data) #>           Df SumOfSqs      R2      F Pr(>F)     #> Model     27  0.79189 0.35355 2.2687  0.001 *** #> Residual 112  1.44793 0.64645                   #> Total    139  2.23982 1.00000                   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://khliland.github.io/HDANOVA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kristian Hovde Liland. Author, maintainer.","code":""},{"path":"https://khliland.github.io/HDANOVA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liland K (2025). HDANOVA: High-Dimensional Analysis Variance. R package version 0.8.2.1, https://github.com/khliland/HDANOVA/, https://khliland.github.io/HDANOVA/.","code":"@Manual{,   title = {HDANOVA: High-Dimensional Analysis of Variance},   author = {Kristian Hovde Liland},   year = {2025},   note = {R package version 0.8.2.1, https://github.com/khliland/HDANOVA/},   url = {https://khliland.github.io/HDANOVA/}, }"},{"path":[]},{"path":"https://khliland.github.io/HDANOVA/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"High-Dimensional Analysis of Variance","text":"","code":"# Install release version from CRAN   install.packages(\"HDANOVA\")   # Install development version from GitHub   devtools::install_github(\"khliland/HDANOVA\")"},{"path":"https://khliland.github.io/HDANOVA/index.html","id":"hd-anova-book-","dir":"","previous_headings":"","what":"HD-ANOVA book","title":"High-Dimensional Analysis of Variance","text":"package contains main methods described Age K. Smilde, Federico Marini, Johan . Westerhuis Kristian Hovde Lilandâs book: Analysis Variance High-Dimensional Data- Applications Life, Food Chemical Sciences published Wiley 2025.","code":""},{"path":"https://khliland.github.io/HDANOVA/index.html","id":"contents","dir":"","previous_headings":"","what":"Contents","title":"High-Dimensional Analysis of Variance","text":"ASCA+ - Analysis Variance Simultaneous Component Analysis APCA+ - ANOVA Principal Component Analysis LiMM-PCA - Linear Mixed Model PCA MSCA - Multilevel Simultaneous Component Analysis PC-ANOVA - Principal Component Analysis Variance PRC - Principal Response Curves PERMANOVA - Permutation Based MANOVA selection datasets Common framework plotting routines","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/HDANOVA.html","id":null,"dir":"Reference","previous_headings":"","what":"High-Dimensional Analysis of Variance â hdanova","title":"High-Dimensional Analysis of Variance â hdanova","text":"function provides high-dimensional analysis variance (HDANOVA) method can used alone part larger analysis, e.g., ASCA, APCA, LiMM-PCA, MSCA PC-ANOVA. can called directly convenince functions asca, apca, limmpca, msca pcanova.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/HDANOVA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"High-Dimensional Analysis of Variance â hdanova","text":"","code":"hdanova(   formula,   data,   subset,   weights,   na.action,   family,   unrestricted = FALSE,   add_error = FALSE,   aug_error = \"denominator\",   use_ED = FALSE,   pca.in = FALSE,   contrasts = \"contr.sum\",   coding,   equal_baseline = FALSE,   SStype = \"II\",   REML = NULL )"},{"path":"https://khliland.github.io/HDANOVA/reference/HDANOVA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"High-Dimensional Analysis of Variance â hdanova","text":"formula Model formula accepting single response (block) predictors. See Details information. data data set analyse. subset Expression subsetting data modelling. weights Optional object weights. na.action handle NAs (action implemented). family Error distributions link function Generalized Linear Models. unrestricted Use unrestricted ANOVA decomposition (default = FALSE). add_error Add error LS means, e.g., APCA. aug_error Augment score matrices backprojection. Default = \"denominator\" (F test), \"residual\" (force error term), nueric value (alpha-value LiMM-PCA). use_ED Use \"effective dimensions\" score rescaling LiMM-PCA. pca.Compress response ASCA (number components). contrasts Effect coding: \"sum\" (default = sum-coding), \"weighted\", \"reference\", \"treatment\". coding Defunct. Use 'contrasts' instead. equal_baseline Experimental: Set TRUE let interactions, main effect missing, e.g., nested model, handled baseline cross effect model. TRUE corresponding interactions put quotation marks included model.frame. SStype Type sum--squares: \"\" = sequential, \"II\" (default) = last term, obeying marginality, \"III\" = last term, obeying marginality. REML Parameter mixlm: NULL (default) = sum--squares, TRUE = REML, FALSE = ML.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/HDANOVA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"High-Dimensional Analysis of Variance â hdanova","text":"hdanova object containing loadings, scores, explained variances, etc. object associated plotting (asca_plots) result (asca_results) functions.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/HDANOVA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"High-Dimensional Analysis of Variance â hdanova","text":"","code":"# Load candies data data(candies)  # Basic HDANOVA model with two factors mod <- hdanova(assessment ~ candy + assessor, data=candies) summary(mod) #> High-Dimensional Analysis of Variance fitted using 'lm' (Linear Model)  #> - SS type II,  coding, restricted model, least squares estimation  #>            Sum.Sq. Expl.var.(%) #> candy     33416.66        74.48 #> assessor   1961.37         4.37 #> Residuals  9489.25        21.15"},{"path":"https://khliland.github.io/HDANOVA/reference/SCA.html","id":null,"dir":"Reference","previous_headings":"","what":"Simultaenous Component Analysis â sca","title":"Simultaenous Component Analysis â sca","text":"function performs Simultaneous Component Analysis (SCA) hdanova object.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/SCA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simultaenous Component Analysis â sca","text":"","code":"sca(object)"},{"path":"https://khliland.github.io/HDANOVA/reference/SCA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simultaenous Component Analysis â sca","text":"object hdanova object.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/SCA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simultaenous Component Analysis â sca","text":"updated hdanova object SCA results.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/SCA.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simultaenous Component Analysis â sca","text":"","code":"# Load candies data data(candies)  # Basic HDANOVA model with two factors mod <- hdanova(assessment ~ candy + assessor, data=candies) mod <- sca(mod) scoreplot(mod)"},{"path":"https://khliland.github.io/HDANOVA/reference/apca.html","id":null,"dir":"Reference","previous_headings":"","what":"ANOVA Principal Component Analysis - APCA â apca","title":"ANOVA Principal Component Analysis - APCA â apca","text":"APCA function fitting ANOVA Principal Component Analysis models.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/apca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ANOVA Principal Component Analysis - APCA â apca","text":"","code":"apca(   formula,   data,   add_error = TRUE,   contrasts = \"contr.sum\",   permute = FALSE,   perm.type = c(\"approximate\", \"exact\"),   ... )"},{"path":"https://khliland.github.io/HDANOVA/reference/apca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ANOVA Principal Component Analysis - APCA â apca","text":"formula Model formula accepting single response (block) predictors. data data set analyse. add_error Add error LS means (default = TRUE). contrasts Effect coding: \"sum\" (default = sum-coding), \"weighted\", \"reference\", \"treatment\". permute Number permutations perform (default = 1000). perm.type Type permutation perform, either \"approximate\" \"exact\" (default = \"approximate\"). ... Additional parameters hdanova function.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/apca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ANOVA Principal Component Analysis - APCA â apca","text":"object class apca, inheriting general asca class. arguments plots can found asca documentation.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/apca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ANOVA Principal Component Analysis - APCA â apca","text":"Harrington, P.d.B., Vieira, N.E., Espinoza, J., Nien, J.K., Romero, R., Yergey, .L. (2005) Analysis varianceâprincipal component analysis: soft tool proteomic discovery. Analytica chimica acta, 544 (1-2), 118â127.","code":""},{"path":[]},{"path":"https://khliland.github.io/HDANOVA/reference/apca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ANOVA Principal Component Analysis - APCA â apca","text":"","code":"data(candies) ap <- apca(assessment ~ candy, data=candies) scoreplot(ap)   # Numeric effects candies$num <- eff <- 1:165 mod <- apca(assessment ~ candy + assessor + num, data=candies) summary(mod) #> Anova Principal Component Analysis fitted using 'lm' (Linear Model)  #> - SS type II,  coding, restricted model, least squares estimation  #>            Sum.Sq. Expl.var.(%) #> candy     32438.46        72.30 #> assessor   1823.59         4.06 #> num         101.17         0.23 #> Residuals  9388.08        20.92 scoreplot(mod, factor=3, gr.col=rgb(eff/max(eff), 1-eff/max(eff),0), pch.scores=\"x\")"},{"path":"https://khliland.github.io/HDANOVA/reference/asca.html","id":null,"dir":"Reference","previous_headings":"","what":"Analysis of Variance Simultaneous Component Analysis - ASCA â asca","title":"Analysis of Variance Simultaneous Component Analysis - ASCA â asca","text":"quite general flexible implementation ASCA.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/asca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analysis of Variance Simultaneous Component Analysis - ASCA â asca","text":"","code":"asca(   formula,   data,   contrasts = \"contr.sum\",   permute = FALSE,   perm.type = c(\"approximate\", \"exact\"),   ... )"},{"path":"https://khliland.github.io/HDANOVA/reference/asca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analysis of Variance Simultaneous Component Analysis - ASCA â asca","text":"formula Model formula accepting single response (block) predictors. See Details information. data data set analyse. contrasts Effect coding: \"sum\" (default = sum-coding), \"weighted\", \"reference\", \"treatment\". permute Number permutations perform (default = 1000). perm.type Type permutation perform, either \"approximate\" \"exact\" (default = \"approximate\"). ... Additional arguments hdanova.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/asca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analysis of Variance Simultaneous Component Analysis - ASCA â asca","text":"asca object containing loadings, scores, explained variances, etc. object associated plotting (asca_plots) result (asca_results) functions.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/asca.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analysis of Variance Simultaneous Component Analysis - ASCA â asca","text":"ASCA method decomposes multivariate response according one design variables. ANOVA used split variation contributions factors, PCA performed corresponding least squares estimates, .e., Y = X1 B1 + X2 B2 + ... + E = T1 P1' + T2 P2' + ... + E. version ASCA encompasses variants LiMM-PCA, generalized ASCA covariates ASCA. includes confidence ellipsoids balanced crossed-effect ASCA. formula interface extended function r() indicate random effects comb() indicate effects combined. See Examples use cases.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/asca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Analysis of Variance Simultaneous Component Analysis - ASCA â asca","text":"Smilde, ., Jansen, J., Hoefsloot, H., Lamers,R., Van Der Greef, J., Timmerman, M.(2005). ANOVA-Simultaneous Component Analysis (ASCA): new tool analyzing designed metabolomics data. Bioinformatics, 21(13), 3043â3048. Liland, K.H., Smilde, ., Marini, F., NÃ¦s,T. (2018). Confidence ellipsoids ASCA models based multivariate regression theory. Journal Chemometrics, 32(e2990), 1â13. Martin, M. Govaerts, B. (2020). LiMM-PCA: Combining ASCA+ linear mixed models analyse high-dimensional designed data. Journal Chemometrics, 34(6), e3232.","code":""},{"path":[]},{"path":"https://khliland.github.io/HDANOVA/reference/asca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analysis of Variance Simultaneous Component Analysis - ASCA â asca","text":"","code":"# Load candies data data(candies)  # Basic ASCA model with two factors mod <- asca(assessment ~ candy + assessor, data=candies) print(mod) #> Anova Simultaneous Component Analysis fitted using 'lm' (Linear Model) #> Call: #> asca(formula = assessment ~ candy + assessor, data = candies)  # ASCA model with interaction mod <- asca(assessment ~ candy * assessor, data=candies) print(mod) #> Anova Simultaneous Component Analysis fitted using 'lm' (Linear Model) #> Call: #> asca(formula = assessment ~ candy * assessor, data = candies)  # Result plotting for first factor loadingplot(mod, scatter=TRUE, labels=\"names\")  scoreplot(mod)  # No backprojection scoreplot(mod, projections=FALSE)  # Spider plot scoreplot(mod, spider=TRUE, projections=FALSE)   # ASCA model with compressed response using 5 principal components mod.pca <- asca(assessment ~ candy + assessor, data=candies, pca.in=5)  # Mixed Model ASCA, random assessor mod.mix <- asca(assessment ~ candy + r(assessor), data=candies) scoreplot(mod.mix)   # Mixed Model ASCA, REML estimation mod.mix <- asca(assessment ~ candy + r(assessor), data=candies, REML=TRUE) scoreplot(mod.mix)   # Load Caldana data data(caldana)  # Combining effects in ASCA mod.comb <- asca(compounds ~ time + comb(light + time:light), data=caldana) summary(mod.comb) #> Anova Simultaneous Component Analysis fitted using 'lm' (Linear Model)  #> - SS type II,  coding, restricted model, least squares estimation  #>                  Sum.Sq. Expl.var.(%) #> time              154.58         9.69 #> light+light:time  349.64        21.92 #> Residuals        1091.14        68.39 timeplot(mod.comb, factor=\"light\", time=\"time\", comb=2)   # Permutation testing mod.perm <- asca(assessment ~ candy * assessor, data=candies, permute=TRUE) summary(mod.perm) #> Anova Simultaneous Component Analysis fitted using 'lm' (Linear Model)  #> - SS type II,  coding, restricted model, least squares estimation, 1000 permutations  #>                 Sum.Sq. Expl.var.(%) p-value #> candy          33416.66        74.48       0 #> assessor        1961.37         4.37       0 #> assessor:candy  3445.73         7.68       0 #> Residuals       6043.52        13.47      NA"},{"path":"https://khliland.github.io/HDANOVA/reference/asca_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"ASCA Fitting Workhorse Function â asca_fit","title":"ASCA Fitting Workhorse Function â asca_fit","text":"function called ASCA related methods package. documented one can access richer set parameters various methods call function directly. latter done care many possibilities used publications tested thoroughly.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/asca_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ASCA Fitting Workhorse Function â asca_fit","text":"","code":"asca_fit(   formula,   data,   subset,   weights,   na.action,   family,   permute = FALSE,   perm.type = c(\"approximate\", \"exact\"),   unrestricted = FALSE,   add_error = FALSE,   aug_error = \"denominator\",   use_ED = FALSE,   pca.in = FALSE,   contrasts = \"contr.sum\",   coding,   equal_baseline = FALSE,   SStype = \"II\",   REML = NULL )"},{"path":"https://khliland.github.io/HDANOVA/reference/asca_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ASCA Fitting Workhorse Function â asca_fit","text":"formula Model formula accepting single response (block) predictors. See Details information. data data set analyse. subset Expression subsetting data modelling. weights Optional object weights. na.action handle NAs (action implemented). family Error distributions link function Generalized Linear Models. permute Perform approximate permutation testing, default = FALSE (numeric TRUE = 1000 permutations). perm.type Type permutation: \"approximate\" (default) \"exact\". unrestricted Use unrestricted ANOVA decomposition (default = FALSE). add_error Add error LS means, e.g., APCA. aug_error Augment score matrices backprojection. Default = \"denominator\" (F test), \"residual\" (force error term), nueric value (alpha-value LiMM-PCA). use_ED Use \"effective dimensions\" score rescaling LiMM-PCA. pca.Compress response ASCA (number components). contrasts Effect coding: \"sum\" (default = sum-coding), \"weighted\", \"reference\", \"treatment\". coding Defunct. Use 'contrasts' instead. equal_baseline Experimental: Set TRUE let interactions, main effect missing, e.g., nested model, handled baseline cross effect model. TRUE corresponding interactions put quotation marks included model.frame. SStype Type sum--squares: \"\" = sequential, \"II\" (default) = last term, obeying marginality, \"III\" = last term, obeying marginality. REML Parameter mixlm: NULL (default) = sum--squares, TRUE = REML, FALSE = ML.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/asca_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ASCA Fitting Workhorse Function â asca_fit","text":"asca object containing loadings, scores, explained variances, etc. object associated plotting (asca_plots) result (asca_results) functions.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/asca_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"ASCA Plot Methods â asca_plots","title":"ASCA Plot Methods â asca_plots","text":"Various plotting procedures asca objects.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/asca_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ASCA Plot Methods â asca_plots","text":"","code":"# S3 method for class 'asca' loadingplot(object, factor = 1, comps = 1:2, ...)  # S3 method for class 'asca' scoreplot(   object,   factor = 1,   comps = 1:2,   within_level = \"all\",   pch.scores = 19,   pch.projections = 1,   gr.col = NULL,   projections = TRUE,   spider = FALSE,   ellipsoids,   confidence,   xlim,   ylim,   xlab,   ylab,   legendpos,   ... )  permutationplot(object, factor = 1, xlim, xlab = \"SSQ\", main, ...)"},{"path":"https://khliland.github.io/HDANOVA/reference/asca_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ASCA Plot Methods â asca_plots","text":"object asca object. factor integer/character selecting model factor. factor <= 0 \"global\", PCA input used (negativ factor include factor level colouring global PCA). comps integer vector selected components. ... additional arguments underlying methods. within_level MSCA parameter chosing plot level (default = \"\"). pch.scores integer plotting symbol. pch.projections integer plotting symbol. gr.col integer vector colours groups. projections Include backprojections score plot (default = TRUE). spider Draw lines group centers backprojections (default = FALSE). ellipsoids character \"confidence\" \"data\" ellipsoids balanced fixed effect models. confidence numeric vector ellipsoid confidences, default = c(0.4, 0.68, 0.95). xlim numeric x limits. ylim numeric y limits. xlab character x label. ylab character y label. legendpos character position legend. main Plot title.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/asca_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ASCA Plot Methods â asca_plots","text":"plotting routines return.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/asca_plots.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ASCA Plot Methods â asca_plots","text":"Usage functions shown using generics examples asca. Plot routines available scoreplot.asca loadingplot.asca.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/asca_plots.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ASCA Plot Methods â asca_plots","text":"Smilde, ., Jansen, J., Hoefsloot, H., Lamers,R., Van Der Greef, J., Timmerman, M.(2005). ANOVA-Simultaneous Component Analysis (ASCA): new tool analyzing designed metabolomics data. Bioinformatics, 21(13), 3043â3048. Liland, K.H., Smilde, ., Marini, F., NÃ¦s,T. (2018). Confidence ellipsoids ASCA models based multivariate regression theory. Journal Chemometrics, 32(e2990), 1â13. Martin, M. Govaerts, B. (2020). LiMM-PCA: Combining ASCA+ linear mixed models analyse high-dimensional designed data. Journal Chemometrics, 34(6), e3232.","code":""},{"path":[]},{"path":"https://khliland.github.io/HDANOVA/reference/asca_results.html","id":null,"dir":"Reference","previous_headings":"","what":"ASCA Result Methods â asca_results","title":"ASCA Result Methods â asca_results","text":"Standard result computation extraction functions ASCA (asca).","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/asca_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ASCA Result Methods â asca_results","text":"","code":"# S3 method for class 'hdanova' print(x, ...)  # S3 method for class 'hdanova' summary(object, extended = TRUE, df = FALSE, ...)  # S3 method for class 'summary.hdanova' print(x, digits = 2, ...)  # S3 method for class 'asca' loadings(object, factor = 1, ...)  # S3 method for class 'asca' scores(object, factor = 1, ...)  projections(object, ...)  # S3 method for class 'asca' projections(object, factor = 1, ...)"},{"path":"https://khliland.github.io/HDANOVA/reference/asca_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ASCA Result Methods â asca_results","text":"x asca object. ... additional arguments underlying methods. object asca object. extended Extended output summary (default = TRUE). df Show degrees freedom summary (default = FALSE). digits integer number digits printing. factor integer/character selecting model factor.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/asca_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ASCA Result Methods â asca_results","text":"Returns depend method used, e.g. projections.asca returns projected samples, scores.asca return scores, print summary methods return object invisibly.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/asca_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ASCA Result Methods â asca_results","text":"Usage functions shown using generics examples asca. Explained variances available (block-wise global) blockexpl print.rosaexpl. Object printing summary available : print.asca summary.asca. Scores loadings extensions scores() loadings() scores.asca loadings.asca. Special ASCA scores factor level basis, back-projected samples function projections.asca.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/asca_results.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"ASCA Result Methods â asca_results","text":"Smilde, ., Jansen, J., Hoefsloot, H., Lamers,R., Van Der Greef, J., Timmerman, M.(2005). ANOVA-Simultaneous Component Analysis (ASCA): new tool analyzing designed metabolomics data. Bioinformatics, 21(13), 3043â3048. Liland, K.H., Smilde, ., Marini, F., NÃ¦s,T. (2018). Confidence ellipsoids ASCA models based multivariate regression theory. Journal Chemometrics, 32(e2990), 1â13. Martin, M. Govaerts, B. (2020). LiMM-PCA: Combining ASCA+ linear mixed models analyse high-dimensional designed data. Journal Chemometrics, 34(6), e3232.","code":""},{"path":[]},{"path":"https://khliland.github.io/HDANOVA/reference/biplot.asca.html","id":null,"dir":"Reference","previous_headings":"","what":"Biplot for ASCA models â biplot.asca","title":"Biplot for ASCA models â biplot.asca","text":"Biplot ASCA models","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/biplot.asca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Biplot for ASCA models â biplot.asca","text":"","code":"# S3 method for class 'asca' biplot(   x,   factor = 1,   comps = 1:2,   xlim = NULL,   ylim = NULL,   col = \"darkgray\",   expand = 1,   labels,   legendpos,   ... )"},{"path":"https://khliland.github.io/HDANOVA/reference/biplot.asca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Biplot for ASCA models â biplot.asca","text":"x asca object. factor Factor number name. comps integer vector selected components. xlim numeric vector length 2 x-axis limits loadings. ylim numeric vector length 2 y-axis limits loadings. col vector colours score axes loading axes points/texts. expand numeric expansion scores, defaulting 1. labels optional. \"names\", row names used labels. \"numbers\", row numbers used labels. (Can also vector labels.) legendpos character position legend. ... Additional arguments plot scoreplot.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/biplot.asca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Biplot for ASCA models â biplot.asca","text":"return, plot.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/biplot.asca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Biplot for ASCA models â biplot.asca","text":"","code":"# Load candies data data(candies)  # Basic ASCA model with two factors and interaction mod <- asca(assessment ~ candy * assessor, data=candies)  # Biplot biplot(mod)   # Biplot with named loadings biplot(mod, labels=\"names\")"},{"path":"https://khliland.github.io/HDANOVA/reference/block.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Block-wise indexable data.frame â block.data.frame","title":"Block-wise indexable data.frame â block.data.frame","text":"convenience function making data.frames easily indexed block-wise basis.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/block.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Block-wise indexable data.frame â block.data.frame","text":"","code":"block.data.frame(X, block_inds = NULL, to.matrix = TRUE)"},{"path":"https://khliland.github.io/HDANOVA/reference/block.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Block-wise indexable data.frame â block.data.frame","text":"X Either single data.frame index list matrices/data.frames block_inds Named list indexes X single data.frame, otherwise NULL. .matrix logical indicating input list elements converted matrices.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/block.data.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Block-wise indexable data.frame â block.data.frame","text":"data.frame can indexed block-wise.","code":""},{"path":[]},{"path":"https://khliland.github.io/HDANOVA/reference/block.data.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Block-wise indexable data.frame â block.data.frame","text":"","code":"# Random data M <- matrix(rnorm(200), nrow = 10) # .. with dimnames dimnames(M) <- list(LETTERS[1:10], as.character(1:20))  # A named list for indexing inds <- list(B1 = 1:10, B2 = 11:20)  X <- block.data.frame(M, inds) str(X) #> 'data.frame':\t10 obs. of  2 variables: #>  $ B1: 'AsIs' num [1:10, 1:10] 0.4314 -0.9009 0.0679 -0.999 -0.4874 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:10] \"A\" \"B\" \"C\" \"D\" ... #>   .. ..$ : chr [1:10] \"1\" \"2\" \"3\" \"4\" ... #>  $ B2: 'AsIs' num [1:10, 1:10] -0.637 0.485 -0.538 -0.166 -0.252 ... #>   ..- attr(*, \"dimnames\")=List of 2 #>   .. ..$ : chr [1:10] \"A\" \"B\" \"C\" \"D\" ... #>   .. ..$ : chr [1:10] \"11\" \"12\" \"13\" \"14\" ..."},{"path":"https://khliland.github.io/HDANOVA/reference/caldana.html","id":null,"dir":"Reference","previous_headings":"","what":"Arabidopsis thaliana growth experiment â caldana","title":"Arabidopsis thaliana growth experiment â caldana","text":"dataset containing 67 metabolites plants grown different light temperature conditions. subset data contains light effect time effect limited conditions, full data also contains gene expressions.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/caldana.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arabidopsis thaliana growth experiment â caldana","text":"","code":"data(caldana)"},{"path":"https://khliland.github.io/HDANOVA/reference/caldana.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Arabidopsis thaliana growth experiment â caldana","text":"data.frame 140 rows 3 variables: light Light levels time Time measurement compound Metabolic compounds","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/caldana.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Arabidopsis thaliana growth experiment â caldana","text":"Caldana C, Degenkolbe T, Cuadros-Inostroza , Klie S, Sulpice R, Leisse , et al. High-density kinetic analysis metabolomic transcriptomic response Arabidopsis eight environmental conditions. Plant J. 2011;67(5):869-884.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/candies.html","id":null,"dir":"Reference","previous_headings":"","what":"Sensory assessment of candies. â candies","title":"Sensory assessment of candies. â candies","text":"dataset containing 9 sensory attributes 5 candies assessed 11 trained assessors.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/candies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sensory assessment of candies. â candies","text":"","code":"data(candies)"},{"path":"https://khliland.github.io/HDANOVA/reference/candies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sensory assessment of candies. â candies","text":"data.frame 165 rows 3 variables: assessment Matrix sensory attributes assessor Factor assessors candy Factor candies","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/candies.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Sensory assessment of candies. â candies","text":"Luciano G, NÃ¦s T. Interpreting sensory data combining principal component analysis analysis variance. Food Qual Prefer. 2009;20(3):167-175.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/dummycode.html","id":null,"dir":"Reference","previous_headings":"","what":"Dummy-coding of a single vector â dummycode","title":"Dummy-coding of a single vector â dummycode","text":"Flexible dummy-coding allowing R's built-types contrasts optional dropping factor level reduce rank defficiency probability.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/dummycode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dummy-coding of a single vector â dummycode","text":"","code":"dummycode(Y, contrast = \"contr.sum\", drop = TRUE)"},{"path":"https://khliland.github.io/HDANOVA/reference/dummycode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dummy-coding of a single vector â dummycode","text":"Y vector dummy code. contrast Contrast type, default = \"contr.sum\". drop logical indicating one level dropped (default = TRUE).","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/dummycode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dummy-coding of a single vector â dummycode","text":"matrix made dummy-coding input vector.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/dummycode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dummy-coding of a single vector â dummycode","text":"","code":"vec <- c(\"a\",\"a\",\"b\",\"b\",\"c\",\"c\") dummycode(vec) #>   x1 x2 #> 1  1  0 #> 2  1  0 #> 3  0  1 #> 4  0  1 #> 5 -1 -1 #> 6 -1 -1"},{"path":"https://khliland.github.io/HDANOVA/reference/extended.model.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracting the Extended Model Frame from a Formula or Fit â extended.model.frame","title":"Extracting the Extended Model Frame from a Formula or Fit â extended.model.frame","text":"function attempts apply model.frame extend result columns interactions.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/extended.model.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracting the Extended Model Frame from a Formula or Fit â extended.model.frame","text":"","code":"extended.model.frame(formula, data, ..., sep = \".\")"},{"path":"https://khliland.github.io/HDANOVA/reference/extended.model.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracting the Extended Model Frame from a Formula or Fit â extended.model.frame","text":"formula model formula terms object R object. data data.frame, list environment (see model.frame). ... arguments pass model.frame. sep separator contraction names interactions (default = \".\").","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/extended.model.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracting the Extended Model Frame from a Formula or Fit â extended.model.frame","text":"data.frame includes everything model.frame plus interaction terms.","code":""},{"path":[]},{"path":"https://khliland.github.io/HDANOVA/reference/extended.model.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracting the Extended Model Frame from a Formula or Fit â extended.model.frame","text":"","code":"dat <- data.frame(Y = c(1,2,3,4,5,6),                   X = factor(LETTERS[c(1,1,2,2,3,3)]),                   W = factor(letters[c(1,2,1,2,1,2)])) extended.model.frame(Y ~ X*W, dat) #>   Y X W X:W #> 1 1 A a A.a #> 2 2 A b A.b #> 3 3 B a B.a #> 4 4 B b B.b #> 5 5 C a C.a #> 6 6 C b C.b"},{"path":"https://khliland.github.io/HDANOVA/reference/extract_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract estimates for a given factor combination â extract_estimates","title":"Extract estimates for a given factor combination â extract_estimates","text":"Extracts sums LS estimates given factor combination object class hdanova. add_residuals TRUE, residuals added LS estimates. remove_factors TRUE, returned matrix data chosen estimates subtracted.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/extract_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract estimates for a given factor combination â extract_estimates","text":"","code":"extract_estimates(object, factors, subtract = FALSE, add_residuals = FALSE)"},{"path":"https://khliland.github.io/HDANOVA/reference/extract_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract estimates for a given factor combination â extract_estimates","text":"object asca object. factors vector factor names numbers. subtract logical subtract estimates data (default = FALSE). add_residuals logical add residuals estimates (default = FALSE).","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/extract_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract estimates for a given factor combination â extract_estimates","text":"matrix extracted estimates.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/extract_estimates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract estimates for a given factor combination â extract_estimates","text":"","code":"# Load candies data data(candies)  # Basic HDANOVA model with two factors and interaction mod <- hdanova(assessment ~ candy * assessor, data=candies)  # Extract estimates for the interaction inter <- extract_estimates(mod, c(\"assessor:candy\"))  # Visualize the interaction effect image(t(inter), main=\"Interaction effect\", xlab=\"Attribute\", ylab=\"Sample\")"},{"path":"https://khliland.github.io/HDANOVA/reference/limmpca.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Mixed Model PCA â limmpca","title":"Linear Mixed Model PCA â limmpca","text":"function mimics parts LiMM-PCA framework, combining ASCA+ linear mixed models analyse high-dimensional designed data. default use REML estimation scaling backprojected errors. See examples alternatives.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/limmpca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Mixed Model PCA â limmpca","text":"","code":"limmpca(   formula,   data,   pca.in = 5,   aug_error = 0.05,   use_ED = FALSE,   REML = TRUE,   contrasts = \"contr.sum\",   permute = FALSE,   perm.type = c(\"approximate\", \"exact\"),   ... )"},{"path":"https://khliland.github.io/HDANOVA/reference/limmpca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Mixed Model PCA â limmpca","text":"formula Model formula accepting single response (block) predictors. See Details information. data data set analyse. pca.Compress response ASCA (number components), default = 5. aug_error Error term model (\"denominator\", \"residual\", numeric alpha-value). latter implies first scaling factor. use_ED Use Effective Dimensions instead degrees freedom scaling. REML Use restricted maximum likelihood estimation. Alternatives: TRUE (default), FALSE (ML), NULL (least squares). contrasts Effect coding: \"sum\" (default = sum-coding), \"weighted\", \"reference\", \"treatment\". permute Number permutations perform (default = 1000). perm.type Type permutation perform, either \"approximate\" \"exact\" (default = \"approximate\"). ... Additional arguments hdanova.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/limmpca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear Mixed Model PCA â limmpca","text":"object class limmpca, inheriting general asca class.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/limmpca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Linear Mixed Model PCA â limmpca","text":"Martin, M. Govaerts, B. (2020). LiMM-PCA: Combining ASCA+ linear mixed models analyse high-dimensional designed data. Journal Chemometrics, 34(6), e3232.","code":""},{"path":[]},{"path":"https://khliland.github.io/HDANOVA/reference/limmpca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Mixed Model PCA â limmpca","text":"","code":"# Load candies data data(candies)  # Default LiMM-PCA model with two factors and interaction, 5 PCA components mod <- limmpca(assessment ~ candy*r(assessor), data=candies) #> boundary (singular) fit: see help('isSingular') summary(mod) #> LiMM-PCA fitted using 'lmm' (Linear Mixed Model)  #> - SS type II,  coding, restricted model, REML estimation  #>                 Sum.Sq. Expl.var.(%) #> candy          33394.40        78.00 #> assessor:candy   621.64         1.45 #> assessor         793.50         1.85 #> Residuals       6162.61        14.39 scoreplot(mod, factor = \"candy\")   # LiMM-PCA with least squares estimation and 8 PCA components modLS <- limmpca(assessment ~ candy*r(assessor), data=candies, REML=NULL, pca.in=8) summary(modLS) #> LiMM-PCA fitted using 'lmm' (Linear Mixed Model)  #> - SS type II,  coding, restricted model, least squares estimation  #>                 Sum.Sq. Expl.var.(%) #> candy          33415.98        74.73 #> assessor        1948.75         4.36 #> assessor:candy  3419.04         7.65 #> Residuals       5934.46        13.27 scoreplot(modLS, factor = \"candy\")   # Load Caldana data data(caldana)  # Combining effects in LiMM-PCA (assuming light is a random factor) mod.comb <- limmpca(compounds ~ time + comb(r(light) + r(time:light)), data=caldana, pca.in=8) #> boundary (singular) fit: see help('isSingular') #> boundary (singular) fit: see help('isSingular') #> boundary (singular) fit: see help('isSingular') #> boundary (singular) fit: see help('isSingular') summary(mod.comb) #> LiMM-PCA fitted using 'lmm' (Linear Mixed Model)  #> - SS type II,  coding, restricted model, REML estimation  #>                  Sum.Sq. Expl.var.(%) #> time              129.51        11.20 #> light+light:time   83.89         7.25 #> Residuals         833.20        72.05"},{"path":"https://khliland.github.io/HDANOVA/reference/model.frame.asca.html","id":null,"dir":"Reference","previous_headings":"","what":"Model Frame and Model Matrix for ASCA-like Models â model.frame.asca","title":"Model Frame and Model Matrix for ASCA-like Models â model.frame.asca","text":"Extraction functions retrieve model.frame model.matrix asca object.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/model.frame.asca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Model Frame and Model Matrix for ASCA-like Models â model.frame.asca","text":"","code":"# S3 method for class 'asca' model.frame(formula, ...)  # S3 method for class 'asca' model.matrix(object, ...)"},{"path":"https://khliland.github.io/HDANOVA/reference/model.frame.asca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Model Frame and Model Matrix for ASCA-like Models â model.frame.asca","text":"formula asca object. ... implemented object asca object.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/model.frame.asca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Model Frame and Model Matrix for ASCA-like Models â model.frame.asca","text":"data.frame matrix object.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/model.frame.asca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Model Frame and Model Matrix for ASCA-like Models â model.frame.asca","text":"","code":"# Load candies data data(candies)  # Basic ASCA model with two factors mod <- asca(assessment ~ candy + assessor, data=candies)  # Extract model frame and model matrix mf <- model.frame(mod) head(mf) #>   assessment.transparent assessment.acid assessment.sweet assessment.raspberry #> 1                   4.80            2.10            13.50                10.35 #> 2                   2.70            6.30            13.65                12.60 #> 3                   2.85            4.80             7.80                 2.85 #> 4                   3.15            0.30            14.25                14.40 #> 5                   3.75            0.45            14.40                14.40 #> 6                   0.45            1.65            14.10                10.35 #>   assessment.texture assessment.strength assessment.hardness #> 1              12.75               10.05                3.90 #> 2              12.15                4.65                2.25 #> 3              11.40                3.90                3.60 #> 4              14.40                3.75                6.15 #> 5              13.95                7.35                1.65 #> 6              13.95                4.05                1.50 #>   assessment.elasticity assessment.sticky candy assessor #> 1                  1.65              1.65     1        1 #> 2                  2.10              3.00     1        1 #> 3                  2.70              3.15     1        1 #> 4                  4.20              6.45     1       10 #> 5                  0.45              1.80     1       10 #> 6                  1.20              4.05     1       10 mm <- model.matrix(mod) par.old <- par(mar=c(3,3,3,1), mgp=c(1,0.7,0)) image(t(mm[seq(165,1,-1),]), main=\"Model Matrix\", xlab=\"dummy values\", ylab=\"samples\",      axes=FALSE)  par(par.old)"},{"path":"https://khliland.github.io/HDANOVA/reference/msca.html","id":null,"dir":"Reference","previous_headings":"","what":"Multilevel Simultaneous Component Analysis - MSCA â msca","title":"Multilevel Simultaneous Component Analysis - MSCA â msca","text":"MSCA implementation assumes single factor used -individuals factor.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/msca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multilevel Simultaneous Component Analysis - MSCA â msca","text":"","code":"msca(   formula,   data,   contrasts = \"contr.sum\",   permute = FALSE,   perm.type = c(\"approximate\", \"exact\"),   ... )"},{"path":"https://khliland.github.io/HDANOVA/reference/msca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multilevel Simultaneous Component Analysis - MSCA â msca","text":"formula Model formula accepting single response (block) predictors. See Details information. data data set analyse. contrasts Effect coding: \"sum\" (default = sum-coding), \"weighted\", \"reference\", \"treatment\". permute Number permutations perform (default = 1000). perm.type Type permutation perform, either \"approximate\" \"exact\" (default = \"approximate\"). ... Additional arguments hdanova.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/msca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multilevel Simultaneous Component Analysis - MSCA â msca","text":"asca object containing loadings, scores, explained variances, etc. object associated plotting (asca_plots) result (asca_results) functions.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/msca.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Multilevel Simultaneous Component Analysis - MSCA â msca","text":"Smilde, ., Jansen, J., Hoefsloot, H., Lamers,R., Van Der Greef, J., Timmerman, M.(2005). ANOVA-Simultaneous Component Analysis (ASCA): new tool analyzing designed metabolomics data. Bioinformatics, 21(13), 3043â3048. Liland, K.H., Smilde, ., Marini, F., NÃ¦s,T. (2018). Confidence ellipsoids ASCA models based multivariate regression theory. Journal Chemometrics, 32(e2990), 1â13.","code":""},{"path":[]},{"path":"https://khliland.github.io/HDANOVA/reference/msca.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multilevel Simultaneous Component Analysis - MSCA â msca","text":"","code":"# Load candies data data(candies)  # Basic MSCA model with a single factor mod <- msca(assessment ~ candy, data=candies) print(mod) #> Multilevel Simultaneous Component Analysis fitted using 'lm' (Linear Model) #> Call: #> msca(formula = assessment ~ candy, data = candies) summary(mod) #> Multilevel Simultaneous Component Analysis fitted using 'lm' (Linear Model)  #> - SS type II,  coding, restricted model, least squares estimation  #>          Sum.Sq. Expl.var.(%) #> Between 33416.66        74.48 #> Within  11450.62        25.52  # Result plotting for first factor loadingplot(mod, scatter=TRUE, labels=\"names\")  scoreplot(mod)   # Within scores scoreplot(mod, factor=\"within\")   # Within scores per factor level par.old <- par(mfrow=c(3,2), mar=c(4,4,2,1), mgp=c(2,0.7,0)) for(i in 1:length(mod$scores.within))   scoreplot(mod, factor=\"within\", within_level=i,             main=paste0(\"Level: \", names(mod$scores.within)[i]),             panel.first=abline(v=0,h=0,col=\"gray\",lty=2)) par(par.old)   # Permutation testing mod.perm <- asca(assessment ~ candy * assessor, data=candies, permute=TRUE) summary(mod.perm) #> Anova Simultaneous Component Analysis fitted using 'lm' (Linear Model)  #> - SS type II,  coding, restricted model, least squares estimation, 1000 permutations  #>                 Sum.Sq. Expl.var.(%) p-value #> candy          33416.66        74.48       0 #> assessor        1961.37         4.37       0 #> assessor:candy  3445.73         7.68       0 #> Residuals       6043.52        13.47      NA"},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal Components Analysis of Variance Simultaneous Component Analysis - PC-ANOVA â pcanova","title":"Principal Components Analysis of Variance Simultaneous Component Analysis - PC-ANOVA â pcanova","text":"quite general flexible implementation PC-ANOVA.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal Components Analysis of Variance Simultaneous Component Analysis - PC-ANOVA â pcanova","text":"","code":"pcanova(formula, data, ncomp = 0.9, contrasts = \"contr.sum\", ...)"},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal Components Analysis of Variance Simultaneous Component Analysis - PC-ANOVA â pcanova","text":"formula Model formula accepting single response (block) predictor names separated + signs. data data set analyse. ncomp number components retain, proportion variation default = minimum cross-validation error. contrasts Effect coding: \"sum\" (default = sum-coding), \"weighted\", \"reference\", \"treatment\". ... Additional parameters hdanova function.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Principal Components Analysis of Variance Simultaneous Component Analysis - PC-ANOVA â pcanova","text":"pcanova object containing loadings, scores, explained variances, etc. object associated plotting (pcanova_plots) result (pcanova_results) functions.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Principal Components Analysis of Variance Simultaneous Component Analysis - PC-ANOVA â pcanova","text":"PC-ANOVA works opposite order ASCA. First response matrix decomposed using ANOVA. components analysed using ANOVA respect design grouping data. latter can ordinary fixed effects modelling mixed models.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Principal Components Analysis of Variance Simultaneous Component Analysis - PC-ANOVA â pcanova","text":"Luciano G, NÃ¦s T. Interpreting sensory data combining principal component analysis analysis variance. Food Qual Prefer. 2009;20(3):167-175.","code":""},{"path":[]},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Principal Components Analysis of Variance Simultaneous Component Analysis - PC-ANOVA â pcanova","text":"","code":"# Load candies data data(candies)  # Basic PC-ANOVA model with two factors, cross-validated opt. of #components mod <- pcanova(assessment ~ candy + assessor, data = candies) print(mod) #> PC-ANOVA - Principal Components Analysis of Variance #>  #> Call: #> pcanova(formula = assessment ~ candy + assessor, data = candies)  # PC-ANOVA model with interaction, minimum 90% explained variance mod <- pcanova(assessment ~ candy * assessor, data = candies, ncomp = 0.9) print(mod) #> PC-ANOVA - Principal Components Analysis of Variance #>  #> Call: #> pcanova(formula = assessment ~ candy * assessor, data = candies,     ncomp = 0.9) summary(mod) #> PC-ANOVA - Principal Components Analysis of Variance #>  #> Call: #> pcanova(formula = assessment ~ candy * assessor, data = candies,     ncomp = 0.9) #> $`Comp. 1` #> Anova Table (Type II tests) #>  #> Response: assessment #>                 Sum Sq  Df  F value  Pr(>F)     #> candy          31470.6   4 780.1762 < 2e-16 *** #> assessor         224.9  10   2.2304 0.02089 *   #> candy:assessor   707.7  40   1.7545 0.01158 *   #> Residuals       1109.3 110                      #> --- #> Signif. codes:  0 â***â 0.001 â**â 0.01 â*â 0.05 â.â 0.1 â â 1 #>  #> $`Comp. 2` #> Anova Table (Type II tests) #>  #> Response: assessment #>                Sum Sq  Df F value    Pr(>F)     #> candy          1573.8   4 33.1604 < 2.2e-16 *** #> assessor        278.3  10  2.3455 0.0150274 *   #> candy:assessor 1053.3  40  2.2193 0.0005888 *** #> Residuals      1305.2 110                       #> --- #> Signif. codes:  0 â***â 0.001 â**â 0.01 â*â 0.05 â.â 0.1 â â 1 #>  #> $`Comp. 3` #> Anova Table (Type II tests) #>  #> Response: assessment #>                 Sum Sq  Df F value    Pr(>F)     #> candy           307.12   4   7.646 1.790e-05 *** #> assessor       1006.62  10  10.024 8.574e-12 *** #> candy:assessor  484.02  40   1.205    0.2229     #> Residuals      1104.61 110                       #> --- #> Signif. codes:  0 â***â 0.001 â**â 0.01 â*â 0.05 â.â 0.1 â â 1 #>   # Tukey group letters for 'candy' per component lapply(mod$models, function(x)        mixlm::cld(mixlm::simple.glht(x,                                      effect = \"candy\"))) #> $`Comp 1` #> Tukey's HSD #> Alpha: 0.05 #>  #>        Mean G1 G2 #> 4  11.77480  A    #> 2  11.66764  A    #> 3  10.36430  A    #> 1 -16.83932     B #> 5 -16.96742     B #>  #> $`Comp 2` #> Tukey's HSD #> Alpha: 0.05 #>  #>         Mean G1 G2 G3 G4 #> 5  4.8321239  A          #> 2  1.1912987        C    #> 4  0.3033102     B  C    #> 3 -1.9764732     B       #> 1 -4.3502597           D #>  #> $`Comp 3` #> Tukey's HSD #> Alpha: 0.05 #>  #>         Mean G1 G2 #> 5  1.2935060  A    #> 3  1.2336431  A    #> 2  0.7696525  A    #> 4 -1.4424540     B #> 1 -1.8543476     B #>   # Result plotting loadingplot(mod, scatter=TRUE, labels=\"names\")  scoreplot(mod)   # Mixed Model PC-ANOVA, random assessor mod.mix <- pcanova(assessment ~ candy + r(assessor), data=candies, ncomp = 0.9) scoreplot(mod.mix) # Fixed effects summary(mod.mix) #> PC-ANOVA - Principal Components Analysis of Variance #>  #> Call: #> pcanova(formula = assessment ~ candy + r(assessor), data = candies,     ncomp = 0.9) #> $`Comp. 1` #> Analysis of variance (restricted model) #> Response: assessment #>           Mean Sq   Sum Sq  Df F value Pr(>F) #> candy     7867.65 31470.61   4  649.50 0.0000 #> assessor    22.49   224.92  10    1.86 0.0556 #> Residuals   12.11  1817.00 150       -      - #>  #>             Err.term(s) Err.df VC(SS) #> 1 candy             (3)    150  fixed #> 2 assessor          (3)    150  0.692 #> 3 Residuals           -      - 12.113 #> (VC = variance component) #>  #>           Expected mean squares #> candy             (3) + 33 Q[1] #> assessor          (3) + 15 (2)  #> Residuals         (3)           #>  #> $`Comp. 2` #> Analysis of variance (restricted model) #> Response: assessment #>           Mean Sq  Sum Sq  Df F value Pr(>F) #> candy      393.46 1573.83   4   25.02 0.0000 #> assessor    27.83  278.30  10    1.77 0.0707 #> Residuals   15.72 2358.48 150       -      - #>  #>             Err.term(s) Err.df VC(SS) #> 1 candy             (3)    150  fixed #> 2 assessor          (3)    150  0.807 #> 3 Residuals           -      - 15.723 #> (VC = variance component) #>  #>           Expected mean squares #> candy             (3) + 33 Q[1] #> assessor          (3) + 15 (2)  #> Residuals         (3)           #>  #> $`Comp. 3` #> Analysis of variance (restricted model) #> Response: assessment #>           Mean Sq  Sum Sq  Df F value Pr(>F) #> candy       76.78  307.12   4    7.25 0.0000 #> assessor   100.66 1006.62  10    9.50 0.0000 #> Residuals   10.59 1588.64 150       -      - #>  #>             Err.term(s) Err.df VC(SS) #> 1 candy             (3)    150  fixed #> 2 assessor          (3)    150    6.0 #> 3 Residuals           -      -   10.6 #> (VC = variance component) #>  #>           Expected mean squares #> candy             (3) + 33 Q[1] #> assessor          (3) + 15 (2)  #> Residuals         (3)           #>"},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"PC-ANOVA Result Methods â pcanova_plots","title":"PC-ANOVA Result Methods â pcanova_plots","text":"Various plotting procedures pcanova objects.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PC-ANOVA Result Methods â pcanova_plots","text":"","code":"# S3 method for class 'pcanova' scoreplot(object, factor = 1, comps = 1:2, col = \"factor\", ...)"},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PC-ANOVA Result Methods â pcanova_plots","text":"object pcanova object. factor integer/character selecting model factor. comps integer vector selected components. col character selecting factor use colouring (default = first factor) ordinary colour specifications. ... additional arguments underlying methods.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PC-ANOVA Result Methods â pcanova_plots","text":"plotting routines return.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova_plots.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PC-ANOVA Result Methods â pcanova_plots","text":"Usage functions shown using generics examples pcanova. Plot routines available scoreplot.pcanova loadingplot.pcanova.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova_plots.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PC-ANOVA Result Methods â pcanova_plots","text":"Luciano G, NÃ¦s T. Interpreting sensory data combining principal component analysis analysis variance. Food Qual Prefer. 2009;20(3):167-175.","code":""},{"path":[]},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova_results.html","id":null,"dir":"Reference","previous_headings":"","what":"PC-ANOVA Result Methods â pcanova_results","title":"PC-ANOVA Result Methods â pcanova_results","text":"Standard result computation extraction functions ASCA (pcanova).","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PC-ANOVA Result Methods â pcanova_results","text":"","code":"# S3 method for class 'pcanova' summary(object, ...)  # S3 method for class 'summary.pcanova' print(x, digits = 2, ...)  # S3 method for class 'pcanova' print(x, ...)  # S3 method for class 'pcanova' summary(object, ...)"},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PC-ANOVA Result Methods â pcanova_results","text":"object pcanova object. ... additional arguments underlying methods. x pcanova object. digits integer number digits printing.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova_results.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PC-ANOVA Result Methods â pcanova_results","text":"Returns depend method used, e.g. projections.pcanova returns projected samples, scores.pcanova return scores, print summary methods return object invisibly.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PC-ANOVA Result Methods â pcanova_results","text":"Usage functions shown using generics examples pcanova. Explained variances available (block-wise global) blockexpl print.rosaexpl. Object printing summary available : print.pcanova summary.pcanova. Scores loadings extensions scores() loadings() scores.pcanova loadings.pcanova. Special ASCA scores factor level basis, back-projected samples function projections.pcanova.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/pcanova_results.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"PC-ANOVA Result Methods â pcanova_results","text":"Luciano G, NÃ¦s T. Interpreting sensory data combining principal component analysis analysis variance. Food Qual Prefer. 2009;20(3):167-175.","code":""},{"path":[]},{"path":"https://khliland.github.io/HDANOVA/reference/permanova.html","id":null,"dir":"Reference","previous_headings":"","what":"Permutation Based MANOVA - PERMANOVA â permanova","title":"Permutation Based MANOVA - PERMANOVA â permanova","text":"Wrapper adonis2 function allow ordinary formula input.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/permanova.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permutation Based MANOVA - PERMANOVA â permanova","text":"","code":"permanova(formula, data, ...)"},{"path":"https://khliland.github.io/HDANOVA/reference/permanova.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permutation Based MANOVA - PERMANOVA â permanova","text":"formula Model formula accepting single response matrix predictors. See details adonis2. data data set analyse. ... Additional arguments adonis2.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/permanova.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Permutation Based MANOVA - PERMANOVA â permanova","text":"ANOVA table permutation-based p-values.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/permanova.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Permutation Based MANOVA - PERMANOVA â permanova","text":"","code":"data(caldana) (pr <- permanova(compounds ~ light * time, caldana)) #> Permutation test for adonis under reduced model #> Permutation: free #> Number of permutations: 999 #>  #> vegan::adonis2(formula = formula, data = data) #>           Df SumOfSqs      R2      F Pr(>F)     #> Model     27  0.79189 0.35355 2.2687  0.001 *** #> Residual 112  1.44793 0.64645                   #> Total    139  2.23982 1.00000                   #> --- #> Signif. codes:  0 â***â 0.001 â**â 0.01 â*â 0.05 â.â 0.1 â â 1"},{"path":"https://khliland.github.io/HDANOVA/reference/permutation.html","id":null,"dir":"Reference","previous_headings":"","what":"Permutation for HDANOVA â permutation","title":"Permutation for HDANOVA â permutation","text":"Permutation testing HDANOVA. function performes permutation testing effects HDANOVA model adds hdanova object.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/permutation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permutation for HDANOVA â permutation","text":"","code":"permutation(object, permute = 1000, perm.type = c(\"approximate\", \"exact\"))"},{"path":"https://khliland.github.io/HDANOVA/reference/permutation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permutation for HDANOVA â permutation","text":"object hdanova object. permute Number permutations perform (default = 1000). perm.type Type permutation perform, either \"approximate\" \"exact\" (default = \"approximate\").","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/permutation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Permutation for HDANOVA â permutation","text":"updated hdanova object permutation results.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/permutation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Permutation for HDANOVA â permutation","text":"","code":"# Load candies data data(candies)  # Basic HDANOVA model with two factors mod <- hdanova(assessment ~ candy + assessor, data=candies) mod <- permutation(mod) summary(mod) #> High-Dimensional Analysis of Variance fitted using 'lm' (Linear Model)  #> - SS type II,  coding, restricted model, least squares estimation, 1000 permutations  #>            Sum.Sq. Expl.var.(%) p-value #> candy     33416.66        74.48       0 #> assessor   1961.37         4.37       0 #> Residuals  9489.25        21.15      NA"},{"path":"https://khliland.github.io/HDANOVA/reference/prc.html","id":null,"dir":"Reference","previous_headings":"","what":"Principal Response Curves â prc","title":"Principal Response Curves â prc","text":"Wrapper prc function allow formula input.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/prc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Principal Response Curves â prc","text":"","code":"prc(formula, data, ...)"},{"path":"https://khliland.github.io/HDANOVA/reference/prc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Principal Response Curves â prc","text":"formula Model formula accepting single response (block) predictors. predictor called 'time', time assumed second predictor. data data set analyse. ... Additional arguments prc.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/prc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Principal Response Curves â prc","text":"object class prc.","code":""},{"path":[]},{"path":"https://khliland.github.io/HDANOVA/reference/prc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Principal Response Curves â prc","text":"","code":"data(caldana) (pr <- prc(compounds ~ light * time, caldana)) #> Call: prc(formula = compounds ~ light * time, data = caldana) #>  #> -- Model Summary -- #>  #>                Inertia Proportion Rank #> Total         11.47745    1.00000      #> Conditional    1.11209    0.09689    6 #> Constrained    2.51542    0.21916   18 #> Unconstrained  7.84993    0.68394   67 #>  #> Inertia is variance #>  #> -- Eigenvalues -- #>  #> Eigenvalues for constrained axes: #>   RDA1   RDA2   RDA3   RDA4   RDA5   RDA6   RDA7   RDA8   RDA9  RDA10  RDA11  #> 0.9779 0.4049 0.3239 0.1755 0.1540 0.1247 0.0699 0.0607 0.0498 0.0336 0.0311  #>  RDA12  RDA13  RDA14  RDA15  RDA16  RDA17  RDA18  #> 0.0273 0.0245 0.0187 0.0168 0.0094 0.0066 0.0061  #>  #> Eigenvalues for unconstrained axes: #>    PC1    PC2    PC3    PC4    PC5    PC6    PC7    PC8  #> 1.8824 1.4836 0.7107 0.4964 0.3533 0.3435 0.3159 0.2450  #> (Showing 8 of 67 unconstrained eigenvalues) #>  summary(pr) #>  #> Call: #> prc(formula = compounds ~ light * time, data = caldana)  #> Species scores: #>                    Alanine                     Valine  #>                   0.900828                   0.175768  #>                    Leucine                 Isoleucine  #>                  -0.657559                  -0.264687  #>                    Proline                     Serine  #>                   1.141926                  -0.051640  #>                  Threonine               beta-alanine  #>                   0.075174                  -0.726471  #>             Hydroxyproline                       GABA  #>                  -0.007045                  -1.087892  #>                  Aspartate                 Asparagine  #>                  -0.696076                  -0.338664  #>                 Methionine            O-acetyl-serine  #>                   0.863337                   0.205739  #>                  Glutamate              Phenylalanine  #>                  -0.337782                   1.245032  #>                  Ornithine                  Glutamine  #>                   0.041141                   1.302687  #>                     Lysine                   Tyrosine  #>                  -1.175389                  -0.606966  #>              Threonic-acid        Citrulline-Arginine  #>                  -0.323093                   0.526770  #>               Pyruvic-acid                Citric-acid  #>                   0.473488                  -0.414141  #>              Succinic-acid               Fumaric-acid  #>                  -0.690860                   0.005060  #>                 Malic-acid                Lactic-acid  #>                   0.006521                  -0.497413  #>              Glycolic-acid               Benzoic-acid  #>                   1.624649                  -0.141741  #>                Maleic-acid             Nicotinic-acid  #>                   0.767982                  -0.060987  #>              Itaconic-acid                Citramalate  #>                  -0.169012                   0.050705  #>     4-hydroxy-benzoic-acid Dehydroascorbic-acid-dimer  #>                  -0.191369                   0.062572  #>              Gluconic-acid       Dehydroascorbic-acid  #>                  -0.159411                  -0.108530  #>              Ascorbic-acid     4-Hydroxycinnamic-acid  #>                  -0.232603                  -0.133527  #>         Similar-to-Adenine                  Shikimate  #>                   0.010357                   0.878436  #>                 Erythritol                  Arabinose  #>                  -0.068112                  -0.110114  #>                   Arabitol                     Fucose  #>                  -0.337455                  -0.051972  #>                   Fructose                   Mannitol  #>                   3.606930                   0.215745  #>                  Galactose                    Glucose  #>                   0.097331                   2.777645  #>                    Sucrose                    Maltose  #>                   0.615215                  -0.263945  #>                  Trehalose                 Galactinol  #>                  -0.195746                   0.211351  #>               myo-inositol                     Uracil  #>                  -0.070161                  -1.067653  #>                 Putrescine               Ethanolamine  #>                  -0.210320                  -0.546516  #>                   Glycerol      Indole-3-acetonitrile  #>                  -0.146868                   0.185760  #>               Sinapic-acid              Palmitic-acid  #>                   0.131682                  -0.267378  #>          Octadecanoic-acid            Docosanoic-acid  #>                  -0.361142                  -0.299480  #>         Tetracosanoic-acid          Hexacosanoic-acid  #>                   0.060571                   0.188997  #>          Octacosanoic-acid  #>                   0.167153  #>  #> Coefficients for treatment + time:treatment interaction #> which are contrasts to treatment Dark  #> rows are treatment, columns are time #>                    0         5       10        20        40     80    160 #> Low Light  1.601e-15 -0.003685 -0.05458 -0.121789 -0.006526 0.1098 0.1833 #> Light      3.011e-15 -0.038250  0.10345 -0.084547  0.098440 0.2416 0.3368 #> High Light 1.620e-15 -0.010944 -0.01016  0.009301  0.312173 0.6746 0.7716"},{"path":"https://khliland.github.io/HDANOVA/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages â reexports","title":"Objects exported from other packages â reexports","text":"objects imported packages. Follow links see documentation. pls coefplot, cvsegments, loading.weights, loadingplot, loadings, MSEP, mvrValstats, pcr, plsr, predplot, R2, RMSEP, scoreplot, scores, validationplot","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/signflip.html","id":null,"dir":"Reference","previous_headings":"","what":"Flip signs of a component/factor combination in a SCA/PCA object â signflip","title":"Flip signs of a component/factor combination in a SCA/PCA object â signflip","text":"function flips sign selected component selected factor asca object. affects scores, loadings projected data.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/signflip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Flip signs of a component/factor combination in a SCA/PCA object â signflip","text":"","code":"signflip(object, factor, comp)"},{"path":"https://khliland.github.io/HDANOVA/reference/signflip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Flip signs of a component/factor combination in a SCA/PCA object â signflip","text":"object asca object. factor integer/character selecting model factor. comp integer selected component.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/signflip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Flip signs of a component/factor combination in a SCA/PCA object â signflip","text":"asca object sign selected component flipped.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/signflip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Flip signs of a component/factor combination in a SCA/PCA object â signflip","text":"","code":"# Load candies data data(candies)  # Basic HDANOVA model with two factors mod <- hdanova(assessment ~ candy + assessor, data=candies) mod <- sca(mod) old.par <- par(mfrow=c(1,2), mar=c(4,4,1,1)) scoreplot(mod, factor=\"candy\") loadingplot(mod, factor=\"candy\")  par(old.par)  # Flip the sign of the first component of the candy factor mod <- signflip(mod, factor=\"candy\", comp=1) old.par <- par(mfrow=c(1,2), mar=c(4,4,1,1)) scoreplot(mod, factor=\"candy\") loadingplot(mod, factor=\"candy\")  par(old.par)"},{"path":"https://khliland.github.io/HDANOVA/reference/timeplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Timeplot for Combined Effects â timeplot","title":"Timeplot for Combined Effects â timeplot","text":"Timeplot Combined Effects","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/timeplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Timeplot for Combined Effects â timeplot","text":"","code":"timeplot(   object,   factor,   time,   comb,   comp = 1,   ylim,   x_time = FALSE,   xlab = time,   ylab = paste0(\"Score \", comp),   lwd = 2,   ... )"},{"path":"https://khliland.github.io/HDANOVA/reference/timeplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Timeplot for Combined Effects â timeplot","text":"object asca object. factor integer/character main factor. time integer/character time factor. comb integer/character combined effect factor. comp integer component number. ylim numeric y limits. x_time logical use time levels non-equispaced x axis (default = FALSE). xlab character x label. ylab character y label. lwd numeric line width. ... additional arguments plot.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/timeplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Timeplot for Combined Effects â timeplot","text":"Nothing","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/timeplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Timeplot for Combined Effects â timeplot","text":"","code":"data(\"caldana\") mod.comb <- asca(compounds ~ time + comb(light + light:time), data=caldana)  # Default time axis timeplot(mod.comb, factor=\"light\", time=\"time\", comb=2)   # Non-equispaced time axis (using time levels) timeplot(mod.comb, factor=\"light\", time=\"time\", comb=2, x_time=TRUE)   # Second component timeplot(mod.comb, factor=\"light\", time=\"time\", comb=2, comp=2, x_time=TRUE)"},{"path":"https://khliland.github.io/HDANOVA/reference/update.without.factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a Model without Factor â update.without.factor","title":"Update a Model without Factor â update.without.factor","text":"Update Model without Factor","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/update.without.factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a Model without Factor â update.without.factor","text":"","code":"# S3 method for class 'without.factor' update(model, fac, hierarchical = TRUE)"},{"path":"https://khliland.github.io/HDANOVA/reference/update_without_factor.html","id":null,"dir":"Reference","previous_headings":"","what":"Update a Model without Factor â update_without_factor","title":"Update a Model without Factor â update_without_factor","text":"Perform model update removing chosen factor. Hierarchical corresponds type \"II\" sum--squares, .e., obeying marginality, non-hierarchical corresponds type \"III\" sum--squares.","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/update_without_factor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update a Model without Factor â update_without_factor","text":"","code":"update_without_factor(model, fac, hierarchical = TRUE)"},{"path":"https://khliland.github.io/HDANOVA/reference/update_without_factor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update a Model without Factor â update_without_factor","text":"model model object update. fac character factor remove. hierarchical logical obey hierarchy removing factor (default = TRUE).","code":""},{"path":"https://khliland.github.io/HDANOVA/reference/update_without_factor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update a Model without Factor â update_without_factor","text":"updated model object returned. supplied model type lmerMod random effects left, model automatically converted linear model updating.","code":""}]
